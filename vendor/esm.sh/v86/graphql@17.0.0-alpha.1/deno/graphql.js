/* esm.sh - esbuild bundle(graphql@17.0.0-alpha.1) deno production */
var ds="17.0.0-alpha.1",hs=Object.freeze({major:17,minor:0,patch:0,preReleaseTag:"alpha.1"});function re(e){return typeof e?.then=="function"}function K(e){return typeof e=="object"&&e!==null}function w(e,t){if(!e)throw new Error(t??"Unexpected invariant triggered.")}var Ts=/\r\n|[\n\r]/g;function st(e,t){let n=0,r=1;for(let i of e.body.matchAll(Ts)){if(typeof i.index=="number"||w(!1),i.index>=t)break;n=i.index+i[0].length,r+=1}return{line:r,column:t+1-n}}function Nn(e){return jt(e.source,st(e.source,e.start))}function jt(e,t){let n=e.locationOffset.column-1,r="".padStart(n)+e.body,i=t.line-1,o=e.locationOffset.line-1,s=t.line+o,a=t.line===1?n:0,p=t.column+a,u=`${e.name}:${s}:${p}
`,l=r.split(/\r\n|[\n\r]/g),h=l[i];if(h.length>120){let y=Math.floor(p/80),N=p%80,_=[];for(let X=0;X<h.length;X+=80)_.push(h.slice(X,X+80));return u+_i([[`${s} |`,_[0]],..._.slice(1,y+1).map(X=>["|",X]),["|","^".padStart(N)],["|",_[y+1]]])}return u+_i([[`${s-1} |`,l[i-1]],[`${s} |`,h],["|","^".padStart(p)],[`${s+1} |`,l[i+1]]])}function _i(e){let t=e.filter(([r,i])=>i!==void 0),n=Math.max(...t.map(([r])=>r.length));return t.map(([r,i])=>r.padStart(n)+(i?" "+i:"")).join(`
`)}var f=class extends Error{constructor(t,n={}){let{nodes:r,source:i,positions:o,path:s,originalError:a,extensions:p}=n;super(t),this.name="GraphQLError",this.path=s??void 0,this.originalError=a??void 0,this.nodes=Oi(Array.isArray(r)?r:r?[r]:void 0);let u=Oi(this.nodes?.map(h=>h.loc).filter(h=>h!=null));this.source=i??u?.[0]?.source,this.positions=o??u?.map(h=>h.start),this.locations=o&&i?o.map(h=>st(i,h)):u?.map(h=>st(h.source,h.start));let l=K(a?.extensions)?a?.extensions:void 0;this.extensions=p??l??Object.create(null),Object.defineProperties(this,{message:{writable:!0,enumerable:!0},name:{enumerable:!1},nodes:{enumerable:!1},source:{enumerable:!1},positions:{enumerable:!1},originalError:{enumerable:!1}}),a?.stack?Object.defineProperty(this,"stack",{value:a.stack,writable:!0,configurable:!0}):Error.captureStackTrace?Error.captureStackTrace(this,f):Object.defineProperty(this,"stack",{value:Error().stack,writable:!0,configurable:!0})}get[Symbol.toStringTag](){return"GraphQLError"}toString(){let t=this.message;if(this.nodes)for(let n of this.nodes)n.loc&&(t+=`

`+Nn(n.loc));else if(this.source&&this.locations)for(let n of this.locations)t+=`

`+jt(this.source,n);return t}toJSON(){let t={message:this.message};return this.locations!=null&&(t.locations=this.locations),this.path!=null&&(t.path=this.path),this.extensions!=null&&Object.keys(this.extensions).length>0&&(t.extensions=this.extensions),t}};function Oi(e){return e===void 0||e.length===0?void 0:e}function z(e,t,n){return new f(`Syntax Error: ${n}`,{source:e,positions:[t]})}var It=class{constructor(t,n,r){this.start=t.start,this.end=n.end,this.startToken=t,this.endToken=n,this.source=r}get[Symbol.toStringTag](){return"Location"}toJSON(){return{start:this.start,end:this.end}}},at=class{constructor(t,n,r,i,o,s){this.kind=t,this.start=n,this.end=r,this.line=i,this.column=o,this.value=s,this.prev=null,this.next=null}get[Symbol.toStringTag](){return"Token"}toJSON(){return{kind:this.kind,value:this.value,line:this.line,column:this.column}}},Mr={Name:[],Document:["definitions"],OperationDefinition:["name","variableDefinitions","directives","selectionSet"],VariableDefinition:["variable","type","defaultValue","directives"],Variable:["name"],SelectionSet:["selections"],Field:["alias","name","arguments","directives","selectionSet"],Argument:["name","value"],FragmentSpread:["name","directives"],InlineFragment:["typeCondition","directives","selectionSet"],FragmentDefinition:["name","variableDefinitions","typeCondition","directives","selectionSet"],IntValue:[],FloatValue:[],StringValue:[],BooleanValue:[],NullValue:[],EnumValue:[],ListValue:["values"],ObjectValue:["fields"],ObjectField:["name","value"],Directive:["name","arguments"],NamedType:["name"],ListType:["type"],NonNullType:["type"],SchemaDefinition:["description","directives","operationTypes"],OperationTypeDefinition:["type"],ScalarTypeDefinition:["description","name","directives"],ObjectTypeDefinition:["description","name","interfaces","directives","fields"],FieldDefinition:["description","name","arguments","type","directives"],InputValueDefinition:["description","name","type","defaultValue","directives"],InterfaceTypeDefinition:["description","name","interfaces","directives","fields"],UnionTypeDefinition:["description","name","directives","types"],EnumTypeDefinition:["description","name","directives","values"],EnumValueDefinition:["description","name","directives"],InputObjectTypeDefinition:["description","name","directives","fields"],DirectiveDefinition:["description","name","arguments","locations"],SchemaExtension:["directives","operationTypes"],ScalarTypeExtension:["name","directives"],ObjectTypeExtension:["name","interfaces","directives","fields"],InterfaceTypeExtension:["name","interfaces","directives","fields"],UnionTypeExtension:["name","directives","types"],EnumTypeExtension:["name","directives","values"],InputObjectTypeExtension:["name","directives","fields"]},ys=new Set(Object.keys(Mr));function Pt(e){let t=e?.kind;return typeof t=="string"&&ys.has(t)}var B;(function(e){e.QUERY="query",e.MUTATION="mutation",e.SUBSCRIPTION="subscription"})(B||(B={}));var b;(function(e){e.QUERY="QUERY",e.MUTATION="MUTATION",e.SUBSCRIPTION="SUBSCRIPTION",e.FIELD="FIELD",e.FRAGMENT_DEFINITION="FRAGMENT_DEFINITION",e.FRAGMENT_SPREAD="FRAGMENT_SPREAD",e.INLINE_FRAGMENT="INLINE_FRAGMENT",e.VARIABLE_DEFINITION="VARIABLE_DEFINITION",e.SCHEMA="SCHEMA",e.SCALAR="SCALAR",e.OBJECT="OBJECT",e.FIELD_DEFINITION="FIELD_DEFINITION",e.ARGUMENT_DEFINITION="ARGUMENT_DEFINITION",e.INTERFACE="INTERFACE",e.UNION="UNION",e.ENUM="ENUM",e.ENUM_VALUE="ENUM_VALUE",e.INPUT_OBJECT="INPUT_OBJECT",e.INPUT_FIELD_DEFINITION="INPUT_FIELD_DEFINITION"})(b||(b={}));var c;(function(e){e.NAME="Name",e.DOCUMENT="Document",e.OPERATION_DEFINITION="OperationDefinition",e.VARIABLE_DEFINITION="VariableDefinition",e.SELECTION_SET="SelectionSet",e.FIELD="Field",e.ARGUMENT="Argument",e.FRAGMENT_SPREAD="FragmentSpread",e.INLINE_FRAGMENT="InlineFragment",e.FRAGMENT_DEFINITION="FragmentDefinition",e.VARIABLE="Variable",e.INT="IntValue",e.FLOAT="FloatValue",e.STRING="StringValue",e.BOOLEAN="BooleanValue",e.NULL="NullValue",e.ENUM="EnumValue",e.LIST="ListValue",e.OBJECT="ObjectValue",e.OBJECT_FIELD="ObjectField",e.DIRECTIVE="Directive",e.NAMED_TYPE="NamedType",e.LIST_TYPE="ListType",e.NON_NULL_TYPE="NonNullType",e.SCHEMA_DEFINITION="SchemaDefinition",e.OPERATION_TYPE_DEFINITION="OperationTypeDefinition",e.SCALAR_TYPE_DEFINITION="ScalarTypeDefinition",e.OBJECT_TYPE_DEFINITION="ObjectTypeDefinition",e.FIELD_DEFINITION="FieldDefinition",e.INPUT_VALUE_DEFINITION="InputValueDefinition",e.INTERFACE_TYPE_DEFINITION="InterfaceTypeDefinition",e.UNION_TYPE_DEFINITION="UnionTypeDefinition",e.ENUM_TYPE_DEFINITION="EnumTypeDefinition",e.ENUM_VALUE_DEFINITION="EnumValueDefinition",e.INPUT_OBJECT_TYPE_DEFINITION="InputObjectTypeDefinition",e.DIRECTIVE_DEFINITION="DirectiveDefinition",e.SCHEMA_EXTENSION="SchemaExtension",e.SCALAR_TYPE_EXTENSION="ScalarTypeExtension",e.OBJECT_TYPE_EXTENSION="ObjectTypeExtension",e.INTERFACE_TYPE_EXTENSION="InterfaceTypeExtension",e.UNION_TYPE_EXTENSION="UnionTypeExtension",e.ENUM_TYPE_EXTENSION="EnumTypeExtension",e.INPUT_OBJECT_TYPE_EXTENSION="InputObjectTypeExtension"})(c||(c={}));function gn(e){return e===9||e===32}function vt(e){return e>=48&&e<=57}function Di(e){return e>=97&&e<=122||e>=65&&e<=90}function Gt(e){return Di(e)||e===95}function In(e){return Di(e)||vt(e)||e===95}function Si(e){let t=Number.MAX_SAFE_INTEGER,n=null,r=-1;for(let i=0;i<e.length;++i){let o=e[i],s=Es(o);s!==o.length&&(n=n??i,r=i,i!==0&&s<t&&(t=s))}return e.map((i,o)=>o===0?i:i.slice(t)).slice(n??0,r+1)}function Es(e){let t=0;for(;t<e.length&&gn(e.charCodeAt(t));)++t;return t}function Ai(e){if(e==="")return!0;let t=!0,n=!1,r=!0,i=!1;for(let o=0;o<e.length;++o)switch(e.codePointAt(o)){case 0:case 1:case 2:case 3:case 4:case 5:case 6:case 7:case 8:case 11:case 12:case 14:case 15:return!1;case 13:return!1;case 10:if(t&&!i)return!1;i=!0,t=!0,n=!1;break;case 9:case 32:n||(n=t);break;default:r&&(r=n),t=!1}return!(t||r&&i)}function vn(e,t){let n=e.replace(/"""/g,'\\"""'),r=n.split(/\r\n|[\n\r]/g),i=r.length===1,o=r.length>1&&r.slice(1).every(N=>N.length===0||gn(N.charCodeAt(0))),s=n.endsWith('\\"""'),a=e.endsWith('"')&&!s,p=e.endsWith("\\"),u=a||p,l=!t?.minimize&&(!i||e.length>70||u||o||s),h="",y=i&&gn(e.charCodeAt(0));return(l&&!y||o)&&(h+=`
`),h+=n,(l||u)&&(h+=`
`),'"""'+h+'"""'}var d;(function(e){e.SOF="<SOF>",e.EOF="<EOF>",e.BANG="!",e.DOLLAR="$",e.AMP="&",e.PAREN_L="(",e.PAREN_R=")",e.SPREAD="...",e.COLON=":",e.EQUALS="=",e.AT="@",e.BRACKET_L="[",e.BRACKET_R="]",e.BRACE_L="{",e.PIPE="|",e.BRACE_R="}",e.NAME="Name",e.INT="Int",e.FLOAT="Float",e.STRING="String",e.BLOCK_STRING="BlockString",e.COMMENT="Comment"})(d||(d={}));var Xe=class{constructor(t){let n=new at(d.SOF,0,0,0,0);this.source=t,this.lastToken=n,this.token=n,this.line=1,this.lineStart=0}get[Symbol.toStringTag](){return"Lexer"}advance(){return this.lastToken=this.token,this.token=this.lookahead()}lookahead(){let t=this.token;if(t.kind!==d.EOF)do if(t.next)t=t.next;else{let n=Ns(this,t.end);t.next=n,n.prev=t,t=n}while(t.kind===d.COMMENT);return t}};function bn(e){return e===d.BANG||e===d.DOLLAR||e===d.AMP||e===d.PAREN_L||e===d.PAREN_R||e===d.SPREAD||e===d.COLON||e===d.EQUALS||e===d.AT||e===d.BRACKET_L||e===d.BRACKET_R||e===d.BRACE_L||e===d.PIPE||e===d.BRACE_R}function bt(e){return e>=0&&e<=55295||e>=57344&&e<=1114111}function _n(e,t){return xi(e.charCodeAt(t))&&Li(e.charCodeAt(t+1))}function xi(e){return e>=55296&&e<=56319}function Li(e){return e>=56320&&e<=57343}function ct(e,t){let n=e.source.body.codePointAt(t);if(n===void 0)return d.EOF;if(n>=32&&n<=126){let r=String.fromCodePoint(n);return r==='"'?`'"'`:`"${r}"`}return"U+"+n.toString(16).toUpperCase().padStart(4,"0")}function H(e,t,n,r,i){let o=e.line,s=1+n-e.lineStart;return new at(t,n,r,o,s,i)}function Ns(e,t){let n=e.source.body,r=n.length,i=t;for(;i<r;){let o=n.charCodeAt(i);switch(o){case 65279:case 9:case 32:case 44:++i;continue;case 10:++i,++e.line,e.lineStart=i;continue;case 13:n.charCodeAt(i+1)===10?i+=2:++i,++e.line,e.lineStart=i;continue;case 35:return gs(e,i);case 33:return H(e,d.BANG,i,i+1);case 36:return H(e,d.DOLLAR,i,i+1);case 38:return H(e,d.AMP,i,i+1);case 40:return H(e,d.PAREN_L,i,i+1);case 41:return H(e,d.PAREN_R,i,i+1);case 46:if(n.charCodeAt(i+1)===46&&n.charCodeAt(i+2)===46)return H(e,d.SPREAD,i,i+3);break;case 58:return H(e,d.COLON,i,i+1);case 61:return H(e,d.EQUALS,i,i+1);case 64:return H(e,d.AT,i,i+1);case 91:return H(e,d.BRACKET_L,i,i+1);case 93:return H(e,d.BRACKET_R,i,i+1);case 123:return H(e,d.BRACE_L,i,i+1);case 124:return H(e,d.PIPE,i,i+1);case 125:return H(e,d.BRACE_R,i,i+1);case 34:return n.charCodeAt(i+1)===34&&n.charCodeAt(i+2)===34?Ds(e,i):vs(e,i)}if(vt(o)||o===45)return Is(e,i,o);if(Gt(o))return Ss(e,i);throw z(e.source,i,o===39?`Unexpected single quote character ('), did you mean to use a double quote (")?`:bt(o)||_n(n,i)?`Unexpected character: ${ct(e,i)}.`:`Invalid character: ${ct(e,i)}.`)}return H(e,d.EOF,r,r)}function gs(e,t){let n=e.source.body,r=n.length,i=t+1;for(;i<r;){let o=n.charCodeAt(i);if(o===10||o===13)break;if(bt(o))++i;else if(_n(n,i))i+=2;else break}return H(e,d.COMMENT,t,i,n.slice(t+1,i))}function Is(e,t,n){let r=e.source.body,i=t,o=n,s=!1;if(o===45&&(o=r.charCodeAt(++i)),o===48){if(o=r.charCodeAt(++i),vt(o))throw z(e.source,i,`Invalid number, unexpected digit after 0: ${ct(e,i)}.`)}else i=jr(e,i,o),o=r.charCodeAt(i);if(o===46&&(s=!0,o=r.charCodeAt(++i),i=jr(e,i,o),o=r.charCodeAt(i)),(o===69||o===101)&&(s=!0,o=r.charCodeAt(++i),(o===43||o===45)&&(o=r.charCodeAt(++i)),i=jr(e,i,o),o=r.charCodeAt(i)),o===46||Gt(o))throw z(e.source,i,`Invalid number, expected digit but got: ${ct(e,i)}.`);return H(e,s?d.FLOAT:d.INT,t,i,r.slice(t,i))}function jr(e,t,n){if(!vt(n))throw z(e.source,t,`Invalid number, expected digit but got: ${ct(e,t)}.`);let r=e.source.body,i=t+1;for(;vt(r.charCodeAt(i));)++i;return i}function vs(e,t){let n=e.source.body,r=n.length,i=t+1,o=i,s="";for(;i<r;){let a=n.charCodeAt(i);if(a===34)return s+=n.slice(o,i),H(e,d.STRING,t,i+1,s);if(a===92){s+=n.slice(o,i);let p=n.charCodeAt(i+1)===117?n.charCodeAt(i+2)===123?bs(e,i):_s(e,i):Os(e,i);s+=p.value,i+=p.size,o=i;continue}if(a===10||a===13)break;if(bt(a))++i;else if(_n(n,i))i+=2;else throw z(e.source,i,`Invalid character within String: ${ct(e,i)}.`)}throw z(e.source,i,"Unterminated string.")}function bs(e,t){let n=e.source.body,r=0,i=3;for(;i<12;){let o=n.charCodeAt(t+i++);if(o===125){if(i<5||!bt(r))break;return{value:String.fromCodePoint(r),size:i}}if(r=r<<4|Qt(o),r<0)break}throw z(e.source,t,`Invalid Unicode escape sequence: "${n.slice(t,t+i)}".`)}function _s(e,t){let n=e.source.body,r=Ri(n,t+2);if(bt(r))return{value:String.fromCodePoint(r),size:6};if(xi(r)&&n.charCodeAt(t+6)===92&&n.charCodeAt(t+7)===117){let i=Ri(n,t+8);if(Li(i))return{value:String.fromCodePoint(r,i),size:12}}throw z(e.source,t,`Invalid Unicode escape sequence: "${n.slice(t,t+6)}".`)}function Ri(e,t){return Qt(e.charCodeAt(t))<<12|Qt(e.charCodeAt(t+1))<<8|Qt(e.charCodeAt(t+2))<<4|Qt(e.charCodeAt(t+3))}function Qt(e){return e>=48&&e<=57?e-48:e>=65&&e<=70?e-55:e>=97&&e<=102?e-87:-1}function Os(e,t){let n=e.source.body;switch(n.charCodeAt(t+1)){case 34:return{value:'"',size:2};case 92:return{value:"\\",size:2};case 47:return{value:"/",size:2};case 98:return{value:"\b",size:2};case 102:return{value:"\f",size:2};case 110:return{value:`
`,size:2};case 114:return{value:"\r",size:2};case 116:return{value:"	",size:2}}throw z(e.source,t,`Invalid character escape sequence: "${n.slice(t,t+2)}".`)}function Ds(e,t){let n=e.source.body,r=n.length,i=e.lineStart,o=t+3,s=o,a="",p=[];for(;o<r;){let u=n.charCodeAt(o);if(u===34&&n.charCodeAt(o+1)===34&&n.charCodeAt(o+2)===34){a+=n.slice(s,o),p.push(a);let l=H(e,d.BLOCK_STRING,t,o+3,Si(p).join(`
`));return e.line+=p.length-1,e.lineStart=i,l}if(u===92&&n.charCodeAt(o+1)===34&&n.charCodeAt(o+2)===34&&n.charCodeAt(o+3)===34){a+=n.slice(s,o),s=o+1,o+=4;continue}if(u===10||u===13){a+=n.slice(s,o),p.push(a),u===13&&n.charCodeAt(o+1)===10?o+=2:++o,a="",s=o,i=o;continue}if(bt(u))++o;else if(_n(n,o))o+=2;else throw z(e.source,o,`Invalid character within String: ${ct(e,o)}.`)}throw z(e.source,o,"Unterminated string.")}function Ss(e,t){let n=e.source.body,r=n.length,i=t+1;for(;i<r;){let o=n.charCodeAt(i);if(In(o))++i;else break}return H(e,d.NAME,t,i,n.slice(t,i))}function S(e,t){if(!e)throw new Error(t)}function m(e){return On(e,[])}function On(e,t){switch(typeof e){case"string":return JSON.stringify(e);case"function":return e.name?`[function ${e.name}]`:"[function]";case"object":return As(e,t);default:return String(e)}}function As(e,t){if(e===null)return"null";if(t.includes(e))return"[Circular]";let n=[...t,e];if(Rs(e)){let r=e.toJSON();if(r!==e)return typeof r=="string"?r:On(r,n)}else if(Array.isArray(e))return Ls(e,n);return xs(e,n)}function Rs(e){return typeof e.toJSON=="function"}function xs(e,t){let n=Object.entries(e);if(n.length===0)return"{}";if(t.length>2)return"["+ws(e)+"]";let r=n.map(([i,o])=>i+": "+On(o,t));return"{ "+r.join(", ")+" }"}function Ls(e,t){if(e.length===0)return"[]";if(t.length>2)return"[Array]";let n=Math.min(10,e.length),r=e.length-n,i=[];for(let o=0;o<n;++o)i.push(On(e[o],t));return r===1?i.push("... 1 more item"):r>1&&i.push(`... ${r} more items`),"["+i.join(", ")+"]"}function ws(e){let t=Object.prototype.toString.call(e).replace(/^\[object /,"").replace(/]$/,"");if(t==="Object"&&typeof e.constructor=="function"){let n=e.constructor.name;if(typeof n=="string"&&n!=="")return n}return t}var ue=globalThis.process?.env.NODE_ENV==="production"?function(t,n){return t instanceof n}:function(t,n){if(t instanceof n)return!0;if(typeof t=="object"&&t!==null){let r=n.prototype[Symbol.toStringTag],i=Symbol.toStringTag in t?t[Symbol.toStringTag]:t.constructor?.name;if(r===i){let o=m(t);throw new Error(`Cannot use ${r} "${o}" from another module or realm.

Ensure that there is only one instance of "graphql" in the node_modules
directory. If different versions of "graphql" are the dependencies of other
relied on modules, use "resolutions" to ensure only one version is installed.

https://yarnpkg.com/en/docs/selective-version-resolutions

Duplicate "graphql" modules cannot be used at the same time since different
versions may have different capabilities and behavior. The data from one
version used in the function from another could produce confusing and
spurious results.`)}}return!1};var je=class{constructor(t,n="GraphQL request",r={line:1,column:1}){typeof t=="string"||S(!1,`Body must be a string. Received: ${m(t)}.`),this.body=t,this.name=n,this.locationOffset=r,this.locationOffset.line>0||S(!1,"line in locationOffset is 1-indexed and must be positive."),this.locationOffset.column>0||S(!1,"column in locationOffset is 1-indexed and must be positive.")}get[Symbol.toStringTag](){return"Source"}};function Dn(e){return ue(e,je)}function ze(e,t){return new _t(e,t).parseDocument()}function An(e,t){let n=new _t(e,t);n.expectToken(d.SOF);let r=n.parseValueLiteral(!1);return n.expectToken(d.EOF),r}function wi(e,t){let n=new _t(e,t);n.expectToken(d.SOF);let r=n.parseConstValueLiteral();return n.expectToken(d.EOF),r}function Fi(e,t){let n=new _t(e,t);n.expectToken(d.SOF);let r=n.parseTypeReference();return n.expectToken(d.EOF),r}var _t=class{constructor(t,n){let r=Dn(t)?t:new je(t);this._lexer=new Xe(r),this._options=n}parseName(){let t=this.expectToken(d.NAME);return this.node(t,{kind:c.NAME,value:t.value})}parseDocument(){return this.node(this._lexer.token,{kind:c.DOCUMENT,definitions:this.many(d.SOF,this.parseDefinition,d.EOF)})}parseDefinition(){if(this.peek(d.BRACE_L))return this.parseOperationDefinition();let t=this.peekDescription(),n=t?this._lexer.lookahead():this._lexer.token;if(n.kind===d.NAME){switch(n.value){case"schema":return this.parseSchemaDefinition();case"scalar":return this.parseScalarTypeDefinition();case"type":return this.parseObjectTypeDefinition();case"interface":return this.parseInterfaceTypeDefinition();case"union":return this.parseUnionTypeDefinition();case"enum":return this.parseEnumTypeDefinition();case"input":return this.parseInputObjectTypeDefinition();case"directive":return this.parseDirectiveDefinition()}if(t)throw z(this._lexer.source,this._lexer.token.start,"Unexpected description, descriptions are supported only on type definitions.");switch(n.value){case"query":case"mutation":case"subscription":return this.parseOperationDefinition();case"fragment":return this.parseFragmentDefinition();case"extend":return this.parseTypeSystemExtension()}}throw this.unexpected(n)}parseOperationDefinition(){let t=this._lexer.token;if(this.peek(d.BRACE_L))return this.node(t,{kind:c.OPERATION_DEFINITION,operation:B.QUERY,name:void 0,variableDefinitions:[],directives:[],selectionSet:this.parseSelectionSet()});let n=this.parseOperationType(),r;return this.peek(d.NAME)&&(r=this.parseName()),this.node(t,{kind:c.OPERATION_DEFINITION,operation:n,name:r,variableDefinitions:this.parseVariableDefinitions(),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseOperationType(){let t=this.expectToken(d.NAME);switch(t.value){case"query":return B.QUERY;case"mutation":return B.MUTATION;case"subscription":return B.SUBSCRIPTION}throw this.unexpected(t)}parseVariableDefinitions(){return this.optionalMany(d.PAREN_L,this.parseVariableDefinition,d.PAREN_R)}parseVariableDefinition(){return this.node(this._lexer.token,{kind:c.VARIABLE_DEFINITION,variable:this.parseVariable(),type:(this.expectToken(d.COLON),this.parseTypeReference()),defaultValue:this.expectOptionalToken(d.EQUALS)?this.parseConstValueLiteral():void 0,directives:this.parseConstDirectives()})}parseVariable(){let t=this._lexer.token;return this.expectToken(d.DOLLAR),this.node(t,{kind:c.VARIABLE,name:this.parseName()})}parseSelectionSet(){return this.node(this._lexer.token,{kind:c.SELECTION_SET,selections:this.many(d.BRACE_L,this.parseSelection,d.BRACE_R)})}parseSelection(){return this.peek(d.SPREAD)?this.parseFragment():this.parseField()}parseField(){let t=this._lexer.token,n=this.parseName(),r,i;return this.expectOptionalToken(d.COLON)?(r=n,i=this.parseName()):i=n,this.node(t,{kind:c.FIELD,alias:r,name:i,arguments:this.parseArguments(!1),directives:this.parseDirectives(!1),selectionSet:this.peek(d.BRACE_L)?this.parseSelectionSet():void 0})}parseArguments(t){let n=t?this.parseConstArgument:this.parseArgument;return this.optionalMany(d.PAREN_L,n,d.PAREN_R)}parseArgument(t=!1){let n=this._lexer.token,r=this.parseName();return this.expectToken(d.COLON),this.node(n,{kind:c.ARGUMENT,name:r,value:this.parseValueLiteral(t)})}parseConstArgument(){return this.parseArgument(!0)}parseFragment(){let t=this._lexer.token;this.expectToken(d.SPREAD);let n=this.expectOptionalKeyword("on");return!n&&this.peek(d.NAME)?this.node(t,{kind:c.FRAGMENT_SPREAD,name:this.parseFragmentName(),directives:this.parseDirectives(!1)}):this.node(t,{kind:c.INLINE_FRAGMENT,typeCondition:n?this.parseNamedType():void 0,directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseFragmentDefinition(){let t=this._lexer.token;return this.expectKeyword("fragment"),this._options?.allowLegacyFragmentVariables===!0?this.node(t,{kind:c.FRAGMENT_DEFINITION,name:this.parseFragmentName(),variableDefinitions:this.parseVariableDefinitions(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()}):this.node(t,{kind:c.FRAGMENT_DEFINITION,name:this.parseFragmentName(),typeCondition:(this.expectKeyword("on"),this.parseNamedType()),directives:this.parseDirectives(!1),selectionSet:this.parseSelectionSet()})}parseFragmentName(){if(this._lexer.token.value==="on")throw this.unexpected();return this.parseName()}parseValueLiteral(t){let n=this._lexer.token;switch(n.kind){case d.BRACKET_L:return this.parseList(t);case d.BRACE_L:return this.parseObject(t);case d.INT:return this._lexer.advance(),this.node(n,{kind:c.INT,value:n.value});case d.FLOAT:return this._lexer.advance(),this.node(n,{kind:c.FLOAT,value:n.value});case d.STRING:case d.BLOCK_STRING:return this.parseStringLiteral();case d.NAME:switch(this._lexer.advance(),n.value){case"true":return this.node(n,{kind:c.BOOLEAN,value:!0});case"false":return this.node(n,{kind:c.BOOLEAN,value:!1});case"null":return this.node(n,{kind:c.NULL});default:return this.node(n,{kind:c.ENUM,value:n.value})}case d.DOLLAR:if(t)if(this.expectToken(d.DOLLAR),this._lexer.token.kind===d.NAME){let r=this._lexer.token.value;throw z(this._lexer.source,n.start,`Unexpected variable "$${r}" in constant value.`)}else throw this.unexpected(n);return this.parseVariable();default:throw this.unexpected()}}parseConstValueLiteral(){return this.parseValueLiteral(!0)}parseStringLiteral(){let t=this._lexer.token;return this._lexer.advance(),this.node(t,{kind:c.STRING,value:t.value,block:t.kind===d.BLOCK_STRING})}parseList(t){let n=()=>this.parseValueLiteral(t);return this.node(this._lexer.token,{kind:c.LIST,values:this.any(d.BRACKET_L,n,d.BRACKET_R)})}parseObject(t){let n=()=>this.parseObjectField(t);return this.node(this._lexer.token,{kind:c.OBJECT,fields:this.any(d.BRACE_L,n,d.BRACE_R)})}parseObjectField(t){let n=this._lexer.token,r=this.parseName();return this.expectToken(d.COLON),this.node(n,{kind:c.OBJECT_FIELD,name:r,value:this.parseValueLiteral(t)})}parseDirectives(t){let n=[];for(;this.peek(d.AT);)n.push(this.parseDirective(t));return n}parseConstDirectives(){return this.parseDirectives(!0)}parseDirective(t){let n=this._lexer.token;return this.expectToken(d.AT),this.node(n,{kind:c.DIRECTIVE,name:this.parseName(),arguments:this.parseArguments(t)})}parseTypeReference(){let t=this._lexer.token,n;if(this.expectOptionalToken(d.BRACKET_L)){let r=this.parseTypeReference();this.expectToken(d.BRACKET_R),n=this.node(t,{kind:c.LIST_TYPE,type:r})}else n=this.parseNamedType();return this.expectOptionalToken(d.BANG)?this.node(t,{kind:c.NON_NULL_TYPE,type:n}):n}parseNamedType(){return this.node(this._lexer.token,{kind:c.NAMED_TYPE,name:this.parseName()})}peekDescription(){return this.peek(d.STRING)||this.peek(d.BLOCK_STRING)}parseDescription(){if(this.peekDescription())return this.parseStringLiteral()}parseSchemaDefinition(){let t=this._lexer.token,n=this.parseDescription();this.expectKeyword("schema");let r=this.parseConstDirectives(),i=this.many(d.BRACE_L,this.parseOperationTypeDefinition,d.BRACE_R);return this.node(t,{kind:c.SCHEMA_DEFINITION,description:n,directives:r,operationTypes:i})}parseOperationTypeDefinition(){let t=this._lexer.token,n=this.parseOperationType();this.expectToken(d.COLON);let r=this.parseNamedType();return this.node(t,{kind:c.OPERATION_TYPE_DEFINITION,operation:n,type:r})}parseScalarTypeDefinition(){let t=this._lexer.token,n=this.parseDescription();this.expectKeyword("scalar");let r=this.parseName(),i=this.parseConstDirectives();return this.node(t,{kind:c.SCALAR_TYPE_DEFINITION,description:n,name:r,directives:i})}parseObjectTypeDefinition(){let t=this._lexer.token,n=this.parseDescription();this.expectKeyword("type");let r=this.parseName(),i=this.parseImplementsInterfaces(),o=this.parseConstDirectives(),s=this.parseFieldsDefinition();return this.node(t,{kind:c.OBJECT_TYPE_DEFINITION,description:n,name:r,interfaces:i,directives:o,fields:s})}parseImplementsInterfaces(){return this.expectOptionalKeyword("implements")?this.delimitedMany(d.AMP,this.parseNamedType):[]}parseFieldsDefinition(){return this.optionalMany(d.BRACE_L,this.parseFieldDefinition,d.BRACE_R)}parseFieldDefinition(){let t=this._lexer.token,n=this.parseDescription(),r=this.parseName(),i=this.parseArgumentDefs();this.expectToken(d.COLON);let o=this.parseTypeReference(),s=this.parseConstDirectives();return this.node(t,{kind:c.FIELD_DEFINITION,description:n,name:r,arguments:i,type:o,directives:s})}parseArgumentDefs(){return this.optionalMany(d.PAREN_L,this.parseInputValueDef,d.PAREN_R)}parseInputValueDef(){let t=this._lexer.token,n=this.parseDescription(),r=this.parseName();this.expectToken(d.COLON);let i=this.parseTypeReference(),o;this.expectOptionalToken(d.EQUALS)&&(o=this.parseConstValueLiteral());let s=this.parseConstDirectives();return this.node(t,{kind:c.INPUT_VALUE_DEFINITION,description:n,name:r,type:i,defaultValue:o,directives:s})}parseInterfaceTypeDefinition(){let t=this._lexer.token,n=this.parseDescription();this.expectKeyword("interface");let r=this.parseName(),i=this.parseImplementsInterfaces(),o=this.parseConstDirectives(),s=this.parseFieldsDefinition();return this.node(t,{kind:c.INTERFACE_TYPE_DEFINITION,description:n,name:r,interfaces:i,directives:o,fields:s})}parseUnionTypeDefinition(){let t=this._lexer.token,n=this.parseDescription();this.expectKeyword("union");let r=this.parseName(),i=this.parseConstDirectives(),o=this.parseUnionMemberTypes();return this.node(t,{kind:c.UNION_TYPE_DEFINITION,description:n,name:r,directives:i,types:o})}parseUnionMemberTypes(){return this.expectOptionalToken(d.EQUALS)?this.delimitedMany(d.PIPE,this.parseNamedType):[]}parseEnumTypeDefinition(){let t=this._lexer.token,n=this.parseDescription();this.expectKeyword("enum");let r=this.parseName(),i=this.parseConstDirectives(),o=this.parseEnumValuesDefinition();return this.node(t,{kind:c.ENUM_TYPE_DEFINITION,description:n,name:r,directives:i,values:o})}parseEnumValuesDefinition(){return this.optionalMany(d.BRACE_L,this.parseEnumValueDefinition,d.BRACE_R)}parseEnumValueDefinition(){let t=this._lexer.token,n=this.parseDescription(),r=this.parseEnumValueName(),i=this.parseConstDirectives();return this.node(t,{kind:c.ENUM_VALUE_DEFINITION,description:n,name:r,directives:i})}parseEnumValueName(){if(this._lexer.token.value==="true"||this._lexer.token.value==="false"||this._lexer.token.value==="null")throw z(this._lexer.source,this._lexer.token.start,`${Sn(this._lexer.token)} is reserved and cannot be used for an enum value.`);return this.parseName()}parseInputObjectTypeDefinition(){let t=this._lexer.token,n=this.parseDescription();this.expectKeyword("input");let r=this.parseName(),i=this.parseConstDirectives(),o=this.parseInputFieldsDefinition();return this.node(t,{kind:c.INPUT_OBJECT_TYPE_DEFINITION,description:n,name:r,directives:i,fields:o})}parseInputFieldsDefinition(){return this.optionalMany(d.BRACE_L,this.parseInputValueDef,d.BRACE_R)}parseTypeSystemExtension(){let t=this._lexer.lookahead();if(t.kind===d.NAME)switch(t.value){case"schema":return this.parseSchemaExtension();case"scalar":return this.parseScalarTypeExtension();case"type":return this.parseObjectTypeExtension();case"interface":return this.parseInterfaceTypeExtension();case"union":return this.parseUnionTypeExtension();case"enum":return this.parseEnumTypeExtension();case"input":return this.parseInputObjectTypeExtension()}throw this.unexpected(t)}parseSchemaExtension(){let t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("schema");let n=this.parseConstDirectives(),r=this.optionalMany(d.BRACE_L,this.parseOperationTypeDefinition,d.BRACE_R);if(n.length===0&&r.length===0)throw this.unexpected();return this.node(t,{kind:c.SCHEMA_EXTENSION,directives:n,operationTypes:r})}parseScalarTypeExtension(){let t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("scalar");let n=this.parseName(),r=this.parseConstDirectives();if(r.length===0)throw this.unexpected();return this.node(t,{kind:c.SCALAR_TYPE_EXTENSION,name:n,directives:r})}parseObjectTypeExtension(){let t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("type");let n=this.parseName(),r=this.parseImplementsInterfaces(),i=this.parseConstDirectives(),o=this.parseFieldsDefinition();if(r.length===0&&i.length===0&&o.length===0)throw this.unexpected();return this.node(t,{kind:c.OBJECT_TYPE_EXTENSION,name:n,interfaces:r,directives:i,fields:o})}parseInterfaceTypeExtension(){let t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("interface");let n=this.parseName(),r=this.parseImplementsInterfaces(),i=this.parseConstDirectives(),o=this.parseFieldsDefinition();if(r.length===0&&i.length===0&&o.length===0)throw this.unexpected();return this.node(t,{kind:c.INTERFACE_TYPE_EXTENSION,name:n,interfaces:r,directives:i,fields:o})}parseUnionTypeExtension(){let t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("union");let n=this.parseName(),r=this.parseConstDirectives(),i=this.parseUnionMemberTypes();if(r.length===0&&i.length===0)throw this.unexpected();return this.node(t,{kind:c.UNION_TYPE_EXTENSION,name:n,directives:r,types:i})}parseEnumTypeExtension(){let t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("enum");let n=this.parseName(),r=this.parseConstDirectives(),i=this.parseEnumValuesDefinition();if(r.length===0&&i.length===0)throw this.unexpected();return this.node(t,{kind:c.ENUM_TYPE_EXTENSION,name:n,directives:r,values:i})}parseInputObjectTypeExtension(){let t=this._lexer.token;this.expectKeyword("extend"),this.expectKeyword("input");let n=this.parseName(),r=this.parseConstDirectives(),i=this.parseInputFieldsDefinition();if(r.length===0&&i.length===0)throw this.unexpected();return this.node(t,{kind:c.INPUT_OBJECT_TYPE_EXTENSION,name:n,directives:r,fields:i})}parseDirectiveDefinition(){let t=this._lexer.token,n=this.parseDescription();this.expectKeyword("directive"),this.expectToken(d.AT);let r=this.parseName(),i=this.parseArgumentDefs(),o=this.expectOptionalKeyword("repeatable");this.expectKeyword("on");let s=this.parseDirectiveLocations();return this.node(t,{kind:c.DIRECTIVE_DEFINITION,description:n,name:r,arguments:i,repeatable:o,locations:s})}parseDirectiveLocations(){return this.delimitedMany(d.PIPE,this.parseDirectiveLocation)}parseDirectiveLocation(){let t=this._lexer.token,n=this.parseName();if(Object.prototype.hasOwnProperty.call(b,n.value))return n;throw this.unexpected(t)}node(t,n){return this._options?.noLocation!==!0&&(n.loc=new It(t,this._lexer.lastToken,this._lexer.source)),n}peek(t){return this._lexer.token.kind===t}expectToken(t){let n=this._lexer.token;if(n.kind===t)return this._lexer.advance(),n;throw z(this._lexer.source,n.start,`Expected ${ki(t)}, found ${Sn(n)}.`)}expectOptionalToken(t){return this._lexer.token.kind===t?(this._lexer.advance(),!0):!1}expectKeyword(t){let n=this._lexer.token;if(n.kind===d.NAME&&n.value===t)this._lexer.advance();else throw z(this._lexer.source,n.start,`Expected "${t}", found ${Sn(n)}.`)}expectOptionalKeyword(t){let n=this._lexer.token;return n.kind===d.NAME&&n.value===t?(this._lexer.advance(),!0):!1}unexpected(t){let n=t??this._lexer.token;return z(this._lexer.source,n.start,`Unexpected ${Sn(n)}.`)}any(t,n,r){this.expectToken(t);let i=[];for(;!this.expectOptionalToken(r);)i.push(n.call(this));return i}optionalMany(t,n,r){if(this.expectOptionalToken(t)){let i=[];do i.push(n.call(this));while(!this.expectOptionalToken(r));return i}return[]}many(t,n,r){this.expectToken(t);let i=[];do i.push(n.call(this));while(!this.expectOptionalToken(r));return i}delimitedMany(t,n){this.expectOptionalToken(t);let r=[];do r.push(n.call(this));while(this.expectOptionalToken(t));return r}};function Sn(e){let t=e.value;return ki(e.kind)+(t!=null?` "${t}"`:"")}function ki(e){return bn(e)?`"${e}"`:e}var Pe=class extends Map{get[Symbol.toStringTag](){return"AccumulatorMap"}add(t,n){let r=this.get(t);r===void 0?this.set(t,[n]):r.push(n)}};function Vi(e){return e.charAt(0).toUpperCase()+e.slice(1).toLowerCase()}function $i(e){return Ui("or",e)}function Ci(e){return Ui("and",e)}function Ui(e,t){switch(t.length!==0||w(!1),t.length){case 1:return t[0];case 2:return t[0]+" "+e+" "+t[1]}let n=t.slice(0,-1),r=t[t.length-1];return n.join(", ")+", "+e+" "+r}var Fs=5;function ie(e,t){let[n,r]=t?[e,t]:[void 0,e];if(r.length===0)return"";let i=" Did you mean ";n&&(i+=n+" ");let o=$i(r.slice(0,Fs).map(s=>`"${s}"`));return i+o+"?"}function Pr(e){return e}function oe(e,t){let n=Object.create(null);for(let r of e)n[t(r)]=r;return n}function _e(e,t,n){let r=Object.create(null);for(let i of e)r[t(i)]=n(i);return r}function Fe(e,t){let n=Object.create(null);for(let r of Object.keys(e))n[r]=t(e[r],r);return n}function Ge(e,t){let n=0,r=0;for(;n<e.length&&r<t.length;){let i=e.charCodeAt(n),o=t.charCodeAt(r);if(Rn(i)&&Rn(o)){let s=0;do++n,s=s*10+i-Gr,i=e.charCodeAt(n);while(Rn(i)&&s>0);let a=0;do++r,a=a*10+o-Gr,o=t.charCodeAt(r);while(Rn(o)&&a>0);if(s<a)return-1;if(s>a)return 1}else{if(i<o)return-1;if(i>o)return 1;++n,++r}}return e.length-t.length}var Gr=48,ks=57;function Rn(e){return!isNaN(e)&&Gr<=e&&e<=ks}function le(e,t){let n=Object.create(null),r=new Qr(e),i=Math.floor(e.length*.4)+1;for(let o of t){let s=r.measure(o,i);s!==void 0&&(n[o]=s)}return Object.keys(n).sort((o,s)=>{let a=n[o]-n[s];return a!==0?a:Ge(o,s)})}var Qr=class{constructor(t){this._input=t,this._inputLowerCase=t.toLowerCase(),this._inputArray=Mi(this._inputLowerCase),this._rows=[new Array(t.length+1).fill(0),new Array(t.length+1).fill(0),new Array(t.length+1).fill(0)]}measure(t,n){if(this._input===t)return 0;let r=t.toLowerCase();if(this._inputLowerCase===r)return 1;let i=Mi(r),o=this._inputArray;if(i.length<o.length){let l=i;i=o,o=l}let s=i.length,a=o.length;if(s-a>n)return;let p=this._rows;for(let l=0;l<=a;l++)p[0][l]=l;for(let l=1;l<=s;l++){let h=p[(l-1)%3],y=p[l%3],N=y[0]=l;for(let _=1;_<=a;_++){let X=i[l-1]===o[_-1]?0:1,P=Math.min(h[_]+1,y[_-1]+1,h[_-1]+X);if(l>1&&_>1&&i[l-1]===o[_-2]&&i[l-2]===o[_-1]){let Te=p[(l-2)%3][_-2];P=Math.min(P,Te+1)}P<N&&(N=P),y[_]=P}if(N>n)return}let u=p[s%3][a];return u<=n?u:void 0}};function Mi(e){let t=e.length,n=new Array(t);for(let r=0;r<t;++r)n[r]=e.charCodeAt(r);return n}function fe(e){if(e==null)return Object.create(null);if(Object.getPrototypeOf(e)===null)return e;let t=Object.create(null);for(let[n,r]of Object.entries(e))t[n]=r;return t}function ji(e){return`"${e.replace(Vs,$s)}"`}var Vs=/[\x00-\x1f\x22\x5c\x7f-\x9f]/g;function $s(e){return Cs[e.charCodeAt(0)]}var Cs=["\\u0000","\\u0001","\\u0002","\\u0003","\\u0004","\\u0005","\\u0006","\\u0007","\\b","\\t","\\n","\\u000B","\\f","\\r","\\u000E","\\u000F","\\u0010","\\u0011","\\u0012","\\u0013","\\u0014","\\u0015","\\u0016","\\u0017","\\u0018","\\u0019","\\u001A","\\u001B","\\u001C","\\u001D","\\u001E","\\u001F","","",'\\"',"","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\\\","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","\\u007F","\\u0080","\\u0081","\\u0082","\\u0083","\\u0084","\\u0085","\\u0086","\\u0087","\\u0088","\\u0089","\\u008A","\\u008B","\\u008C","\\u008D","\\u008E","\\u008F","\\u0090","\\u0091","\\u0092","\\u0093","\\u0094","\\u0095","\\u0096","\\u0097","\\u0098","\\u0099","\\u009A","\\u009B","\\u009C","\\u009D","\\u009E","\\u009F"];var pt=Object.freeze({});function ke(e,t,n=Mr){let r=new Map;for(let _ of Object.values(c))r.set(_,ut(t,_));let i,o=Array.isArray(e),s=[e],a=-1,p=[],u=e,l,h,y=[],N=[];do{a++;let _=a===s.length,X=_&&p.length!==0;if(_){if(l=N.length===0?void 0:y[y.length-1],u=h,h=N.pop(),X)if(o){u=u.slice();let Te=0;for(let[be,Me]of p){let Ke=be-Te;Me===null?(u.splice(Ke,1),Te++):u[Ke]=Me}}else{u=Object.defineProperties({},Object.getOwnPropertyDescriptors(u));for(let[Te,be]of p)u[Te]=be}a=i.index,s=i.keys,p=i.edits,o=i.inArray,i=i.prev}else if(h){if(l=o?a:s[a],u=h[l],u==null)continue;y.push(l)}let P;if(!Array.isArray(u)){if(Pt(u)||S(!1,`Invalid AST Node: ${m(u)}.`),P=(_?r.get(u.kind)?.leave:r.get(u.kind)?.enter)?.call(t,u,l,h,y,N),P===pt)break;if(P===!1){if(!_){y.pop();continue}}else if(P!==void 0&&(p.push([l,P]),!_))if(Pt(P))u=P;else{y.pop();continue}}P===void 0&&X&&p.push([l,u]),_?y.pop():(i={inArray:o,index:a,keys:s,edits:p,prev:i},o=Array.isArray(u),s=o?u:n[u.kind]??[],a=-1,p=[],h&&N.push(h),h=u)}while(i!==void 0);return p.length!==0?p[p.length-1][1]:e}function Bt(e){let t=new Array(e.length).fill(null),n=Object.create(null);for(let r of Object.values(c)){let i=!1,o=new Array(e.length).fill(void 0),s=new Array(e.length).fill(void 0);for(let p=0;p<e.length;++p){let{enter:u,leave:l}=ut(e[p],r);i||(i=u!=null||l!=null),o[p]=u,s[p]=l}if(!i)continue;let a={enter(...p){let u=p[0];for(let l=0;l<e.length;l++)if(t[l]===null){let h=o[l]?.apply(e[l],p);if(h===!1)t[l]=u;else if(h===pt)t[l]=pt;else if(h!==void 0)return h}},leave(...p){let u=p[0];for(let l=0;l<e.length;l++)if(t[l]===null){let h=s[l]?.apply(e[l],p);if(h===pt)t[l]=pt;else if(h!==void 0&&h!==!1)return h}else t[l]===u&&(t[l]=null)}};n[r]=a}return n}function ut(e,t){let n=e[t];return typeof n=="object"?n:typeof n=="function"?{enter:n,leave:void 0}:{enter:e.enter,leave:e.leave}}function k(e){return ke(e,Ms)}var Us=80,Ms={Name:{leave:e=>e.value},Variable:{leave:e=>"$"+e.name},Document:{leave:e=>I(e.definitions,`

`)},OperationDefinition:{leave(e){let t=V("(",I(e.variableDefinitions,", "),")"),n=I([e.operation,I([e.name,t]),I(e.directives," ")]," ");return(n==="query"?"":n+" ")+e.selectionSet}},VariableDefinition:{leave:({variable:e,type:t,defaultValue:n,directives:r})=>e+": "+t+V(" = ",n)+V(" ",I(r," "))},SelectionSet:{leave:({selections:e})=>Ve(e)},Field:{leave({alias:e,name:t,arguments:n,directives:r,selectionSet:i}){let o=V("",e,": ")+t,s=o+V("(",I(n,", "),")");return s.length>Us&&(s=o+V(`(
`,xn(I(n,`
`)),`
)`)),I([s,I(r," "),i]," ")}},Argument:{leave:({name:e,value:t})=>e+": "+t},FragmentSpread:{leave:({name:e,directives:t})=>"..."+e+V(" ",I(t," "))},InlineFragment:{leave:({typeCondition:e,directives:t,selectionSet:n})=>I(["...",V("on ",e),I(t," "),n]," ")},FragmentDefinition:{leave:({name:e,typeCondition:t,variableDefinitions:n,directives:r,selectionSet:i})=>`fragment ${e}${V("(",I(n,", "),")")} on ${t} ${V("",I(r," ")," ")}`+i},IntValue:{leave:({value:e})=>e},FloatValue:{leave:({value:e})=>e},StringValue:{leave:({value:e,block:t})=>t?vn(e):ji(e)},BooleanValue:{leave:({value:e})=>e?"true":"false"},NullValue:{leave:()=>"null"},EnumValue:{leave:({value:e})=>e},ListValue:{leave:({values:e})=>"["+I(e,", ")+"]"},ObjectValue:{leave:({fields:e})=>"{ "+I(e,", ")+" }"},ObjectField:{leave:({name:e,value:t})=>e+": "+t},Directive:{leave:({name:e,arguments:t})=>"@"+e+V("(",I(t,", "),")")},NamedType:{leave:({name:e})=>e},ListType:{leave:({type:e})=>"["+e+"]"},NonNullType:{leave:({type:e})=>e+"!"},SchemaDefinition:{leave:({description:e,directives:t,operationTypes:n})=>V("",e,`
`)+I(["schema",I(t," "),Ve(n)]," ")},OperationTypeDefinition:{leave:({operation:e,type:t})=>e+": "+t},ScalarTypeDefinition:{leave:({description:e,name:t,directives:n})=>V("",e,`
`)+I(["scalar",t,I(n," ")]," ")},ObjectTypeDefinition:{leave:({description:e,name:t,interfaces:n,directives:r,fields:i})=>V("",e,`
`)+I(["type",t,V("implements ",I(n," & ")),I(r," "),Ve(i)]," ")},FieldDefinition:{leave:({description:e,name:t,arguments:n,type:r,directives:i})=>V("",e,`
`)+t+(Pi(n)?V(`(
`,xn(I(n,`
`)),`
)`):V("(",I(n,", "),")"))+": "+r+V(" ",I(i," "))},InputValueDefinition:{leave:({description:e,name:t,type:n,defaultValue:r,directives:i})=>V("",e,`
`)+I([t+": "+n,V("= ",r),I(i," ")]," ")},InterfaceTypeDefinition:{leave:({description:e,name:t,interfaces:n,directives:r,fields:i})=>V("",e,`
`)+I(["interface",t,V("implements ",I(n," & ")),I(r," "),Ve(i)]," ")},UnionTypeDefinition:{leave:({description:e,name:t,directives:n,types:r})=>V("",e,`
`)+I(["union",t,I(n," "),V("= ",I(r," | "))]," ")},EnumTypeDefinition:{leave:({description:e,name:t,directives:n,values:r})=>V("",e,`
`)+I(["enum",t,I(n," "),Ve(r)]," ")},EnumValueDefinition:{leave:({description:e,name:t,directives:n})=>V("",e,`
`)+I([t,I(n," ")]," ")},InputObjectTypeDefinition:{leave:({description:e,name:t,directives:n,fields:r})=>V("",e,`
`)+I(["input",t,I(n," "),Ve(r)]," ")},DirectiveDefinition:{leave:({description:e,name:t,arguments:n,repeatable:r,locations:i})=>V("",e,`
`)+"directive @"+t+(Pi(n)?V(`(
`,xn(I(n,`
`)),`
)`):V("(",I(n,", "),")"))+(r?" repeatable":"")+" on "+I(i," | ")},SchemaExtension:{leave:({directives:e,operationTypes:t})=>I(["extend schema",I(e," "),Ve(t)]," ")},ScalarTypeExtension:{leave:({name:e,directives:t})=>I(["extend scalar",e,I(t," ")]," ")},ObjectTypeExtension:{leave:({name:e,interfaces:t,directives:n,fields:r})=>I(["extend type",e,V("implements ",I(t," & ")),I(n," "),Ve(r)]," ")},InterfaceTypeExtension:{leave:({name:e,interfaces:t,directives:n,fields:r})=>I(["extend interface",e,V("implements ",I(t," & ")),I(n," "),Ve(r)]," ")},UnionTypeExtension:{leave:({name:e,directives:t,types:n})=>I(["extend union",e,I(t," "),V("= ",I(n," | "))]," ")},EnumTypeExtension:{leave:({name:e,directives:t,values:n})=>I(["extend enum",e,I(t," "),Ve(n)]," ")},InputObjectTypeExtension:{leave:({name:e,directives:t,fields:n})=>I(["extend input",e,I(t," "),Ve(n)]," ")}};function I(e,t=""){return e?.filter(n=>n).join(t)??""}function Ve(e){return V(`{
`,xn(I(e,`
`)),`
}`)}function V(e,t,n=""){return t!=null&&t!==""?e+t+n:""}function xn(e){return V("  ",e.replace(/\n/g,`
  `))}function Pi(e){return e?.some(t=>t.includes(`
`))??!1}function Ot(e,t){switch(e.kind){case c.NULL:return null;case c.INT:return parseInt(e.value,10);case c.FLOAT:return parseFloat(e.value);case c.STRING:case c.ENUM:case c.BOOLEAN:return e.value;case c.LIST:return e.values.map(n=>Ot(n,t));case c.OBJECT:return _e(e.fields,n=>n.name.value,n=>Ot(n.value,t));case c.VARIABLE:return t?.[e.name.value]}}function me(e){if(e!=null||S(!1,"Must provide name."),typeof e=="string"||S(!1,"Expected name to be a string."),e.length===0)throw new f("Expected name to be a non-empty string.");for(let t=1;t<e.length;++t)if(!In(e.charCodeAt(t)))throw new f(`Names must only contain [_a-zA-Z0-9] but "${e}" does not.`);if(!Gt(e.charCodeAt(0)))throw new f(`Names must start with [_a-zA-Z] but "${e}" does not.`);return e}function Ln(e){if(e==="true"||e==="false"||e==="null")throw new f(`Enum values cannot be named: ${e}`);return me(e)}function lt(e){return W(e)||A(e)||x(e)||M(e)||C(e)||L(e)||F(e)||v(e)}function Gi(e){if(!lt(e))throw new Error(`Expected ${m(e)} to be a GraphQL type.`);return e}function W(e){return ue(e,se)}function Qi(e){if(!W(e))throw new Error(`Expected ${m(e)} to be a GraphQL Scalar type.`);return e}function A(e){return ue(e,ee)}function Fn(e){if(!A(e))throw new Error(`Expected ${m(e)} to be a GraphQL Object type.`);return e}function x(e){return ue(e,Oe)}function kn(e){if(!x(e))throw new Error(`Expected ${m(e)} to be a GraphQL Interface type.`);return e}function M(e){return ue(e,De)}function Bi(e){if(!M(e))throw new Error(`Expected ${m(e)} to be a GraphQL Union type.`);return e}function C(e){return ue(e,de)}function qi(e){if(!C(e))throw new Error(`Expected ${m(e)} to be a GraphQL Enum type.`);return e}function L(e){return ue(e,Se)}function Yi(e){if(!L(e))throw new Error(`Expected ${m(e)} to be a GraphQL Input Object type.`);return e}function F(e){return ue(e,G)}function Ji(e){if(!F(e))throw new Error(`Expected ${m(e)} to be a GraphQL List type.`);return e}function v(e){return ue(e,O)}function Ki(e){if(!v(e))throw new Error(`Expected ${m(e)} to be a GraphQL Non-Null type.`);return e}function Z(e){return W(e)||C(e)||L(e)||St(e)&&Z(e.ofType)}function Xi(e){if(!Z(e))throw new Error(`Expected ${m(e)} to be a GraphQL input type.`);return e}function Ae(e){return W(e)||A(e)||x(e)||M(e)||C(e)||St(e)&&Ae(e.ofType)}function zi(e){if(!Ae(e))throw new Error(`Expected ${m(e)} to be a GraphQL output type.`);return e}function te(e){return W(e)||C(e)}function Hi(e){if(!te(e))throw new Error(`Expected ${m(e)} to be a GraphQL leaf type.`);return e}function ye(e){return A(e)||x(e)||M(e)}function Wi(e){if(!ye(e))throw new Error(`Expected ${m(e)} to be a GraphQL composite type.`);return e}function ae(e){return x(e)||M(e)}function Zi(e){if(!ae(e))throw new Error(`Expected ${m(e)} to be a GraphQL abstract type.`);return e}var G=class{constructor(t){lt(t)||S(!1,`Expected ${m(t)} to be a GraphQL type.`),this.ofType=t}get[Symbol.toStringTag](){return"GraphQLList"}toString(){return"["+String(this.ofType)+"]"}toJSON(){return this.toString()}},O=class{constructor(t){Vn(t)||S(!1,`Expected ${m(t)} to be a GraphQL nullable type.`),this.ofType=t}get[Symbol.toStringTag](){return"GraphQLNonNull"}toString(){return String(this.ofType)+"!"}toJSON(){return this.toString()}};function St(e){return F(e)||v(e)}function eo(e){if(!St(e))throw new Error(`Expected ${m(e)} to be a GraphQL wrapping type.`);return e}function Vn(e){return lt(e)&&!v(e)}function $n(e){if(!Vn(e))throw new Error(`Expected ${m(e)} to be a GraphQL nullable type.`);return e}function At(e){if(e)return v(e)?e.ofType:e}function He(e){return W(e)||A(e)||x(e)||M(e)||C(e)||L(e)}function to(e){if(!He(e))throw new Error(`Expected ${m(e)} to be a GraphQL named type.`);return e}function q(e){if(e){let t=e;for(;St(t);)t=t.ofType;return t}}function Cn(e){return typeof e=="function"?e():e}function Un(e){return typeof e=="function"?e():e}var se=class{constructor(t){let n=t.parseValue??Pr;this.name=me(t.name),this.description=t.description,this.specifiedByURL=t.specifiedByURL,this.serialize=t.serialize??Pr,this.parseValue=n,this.parseLiteral=t.parseLiteral??((r,i)=>n(Ot(r,i))),this.extensions=fe(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=t.extensionASTNodes??[],t.specifiedByURL==null||typeof t.specifiedByURL=="string"||S(!1,`${this.name} must provide "specifiedByURL" as a string, but got: ${m(t.specifiedByURL)}.`),t.serialize==null||typeof t.serialize=="function"||S(!1,`${this.name} must provide "serialize" function. If this custom Scalar is also used as an input type, ensure "parseValue" and "parseLiteral" functions are also provided.`),t.parseLiteral&&(typeof t.parseValue=="function"&&typeof t.parseLiteral=="function"||S(!1,`${this.name} must provide both "parseValue" and "parseLiteral" functions.`))}get[Symbol.toStringTag](){return"GraphQLScalarType"}toConfig(){return{name:this.name,description:this.description,specifiedByURL:this.specifiedByURL,serialize:this.serialize,parseValue:this.parseValue,parseLiteral:this.parseLiteral,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}},ee=class{constructor(t){this.name=me(t.name),this.description=t.description,this.isTypeOf=t.isTypeOf,this.extensions=fe(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=t.extensionASTNodes??[],this._fields=()=>ro(t),this._interfaces=()=>no(t),t.isTypeOf==null||typeof t.isTypeOf=="function"||S(!1,`${this.name} must provide "isTypeOf" as a function, but got: ${m(t.isTypeOf)}.`)}get[Symbol.toStringTag](){return"GraphQLObjectType"}getFields(){return typeof this._fields=="function"&&(this._fields=this._fields()),this._fields}getInterfaces(){return typeof this._interfaces=="function"&&(this._interfaces=this._interfaces()),this._interfaces}toConfig(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:io(this.getFields()),isTypeOf:this.isTypeOf,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}};function no(e){let t=Cn(e.interfaces??[]);return Array.isArray(t)||S(!1,`${e.name} interfaces must be an Array or a function which returns an Array.`),t}function ro(e){let t=Un(e.fields);return Dt(t)||S(!1,`${e.name} fields must be an object with field names as keys or a function which returns such an object.`),Fe(t,(n,r)=>{Dt(n)||S(!1,`${e.name}.${r} field config must be an object.`),n.resolve==null||typeof n.resolve=="function"||S(!1,`${e.name}.${r} field resolver must be a function if provided, but got: ${m(n.resolve)}.`);let i=n.args??{};return Dt(i)||S(!1,`${e.name}.${r} args must be an object with argument names as keys.`),{name:me(r),description:n.description,type:n.type,args:Br(i),resolve:n.resolve,subscribe:n.subscribe,deprecationReason:n.deprecationReason,extensions:fe(n.extensions),astNode:n.astNode}})}function Br(e){return Object.entries(e).map(([t,n])=>({name:me(t),description:n.description,type:n.type,defaultValue:n.defaultValue,deprecationReason:n.deprecationReason,extensions:fe(n.extensions),astNode:n.astNode}))}function Dt(e){return K(e)&&!Array.isArray(e)}function io(e){return Fe(e,t=>({description:t.description,type:t.type,args:qr(t.args),resolve:t.resolve,subscribe:t.subscribe,deprecationReason:t.deprecationReason,extensions:t.extensions,astNode:t.astNode}))}function qr(e){return _e(e,t=>t.name,t=>({description:t.description,type:t.type,defaultValue:t.defaultValue,deprecationReason:t.deprecationReason,extensions:t.extensions,astNode:t.astNode}))}function Re(e){return v(e.type)&&e.defaultValue===void 0}var Oe=class{constructor(t){this.name=me(t.name),this.description=t.description,this.resolveType=t.resolveType,this.extensions=fe(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=t.extensionASTNodes??[],this._fields=ro.bind(void 0,t),this._interfaces=no.bind(void 0,t),t.resolveType==null||typeof t.resolveType=="function"||S(!1,`${this.name} must provide "resolveType" as a function, but got: ${m(t.resolveType)}.`)}get[Symbol.toStringTag](){return"GraphQLInterfaceType"}getFields(){return typeof this._fields=="function"&&(this._fields=this._fields()),this._fields}getInterfaces(){return typeof this._interfaces=="function"&&(this._interfaces=this._interfaces()),this._interfaces}toConfig(){return{name:this.name,description:this.description,interfaces:this.getInterfaces(),fields:io(this.getFields()),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}},De=class{constructor(t){this.name=me(t.name),this.description=t.description,this.resolveType=t.resolveType,this.extensions=fe(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=t.extensionASTNodes??[],this._types=js.bind(void 0,t),t.resolveType==null||typeof t.resolveType=="function"||S(!1,`${this.name} must provide "resolveType" as a function, but got: ${m(t.resolveType)}.`)}get[Symbol.toStringTag](){return"GraphQLUnionType"}getTypes(){return typeof this._types=="function"&&(this._types=this._types()),this._types}toConfig(){return{name:this.name,description:this.description,types:this.getTypes(),resolveType:this.resolveType,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}};function js(e){let t=Cn(e.types);return Array.isArray(t)||S(!1,`Must provide Array of types or a function which returns such an array for Union ${e.name}.`),t}var de=class{constructor(t){this.name=me(t.name),this.description=t.description,this.extensions=fe(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=t.extensionASTNodes??[],this._values=Ps(this.name,t.values),this._valueLookup=new Map(this._values.map(n=>[n.value,n])),this._nameLookup=oe(this._values,n=>n.name)}get[Symbol.toStringTag](){return"GraphQLEnumType"}getValues(){return this._values}getValue(t){return this._nameLookup[t]}serialize(t){let n=this._valueLookup.get(t);if(n===void 0)throw new f(`Enum "${this.name}" cannot represent value: ${m(t)}`);return n.name}parseValue(t){if(typeof t!="string"){let r=m(t);throw new f(`Enum "${this.name}" cannot represent non-string value: ${r}.`+wn(this,r))}let n=this.getValue(t);if(n==null)throw new f(`Value "${t}" does not exist in "${this.name}" enum.`+wn(this,t));return n.value}parseLiteral(t,n){if(t.kind!==c.ENUM){let i=k(t);throw new f(`Enum "${this.name}" cannot represent non-enum value: ${i}.`+wn(this,i),{nodes:t})}let r=this.getValue(t.value);if(r==null){let i=k(t);throw new f(`Value "${i}" does not exist in "${this.name}" enum.`+wn(this,i),{nodes:t})}return r.value}toConfig(){let t=_e(this.getValues(),n=>n.name,n=>({description:n.description,value:n.value,deprecationReason:n.deprecationReason,extensions:n.extensions,astNode:n.astNode}));return{name:this.name,description:this.description,values:t,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}};function wn(e,t){let n=e.getValues().map(i=>i.name),r=le(t,n);return ie("the enum value",r)}function Ps(e,t){return Dt(t)||S(!1,`${e} values must be an object with value names as keys.`),Object.entries(t).map(([n,r])=>(Dt(r)||S(!1,`${e}.${n} must refer to an object with a "value" key representing an internal value but got: ${m(r)}.`),{name:Ln(n),description:r.description,value:r.value!==void 0?r.value:n,deprecationReason:r.deprecationReason,extensions:fe(r.extensions),astNode:r.astNode}))}var Se=class{constructor(t){this.name=me(t.name),this.description=t.description,this.extensions=fe(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=t.extensionASTNodes??[],this._fields=Gs.bind(void 0,t)}get[Symbol.toStringTag](){return"GraphQLInputObjectType"}getFields(){return typeof this._fields=="function"&&(this._fields=this._fields()),this._fields}toConfig(){let t=Fe(this.getFields(),n=>({description:n.description,type:n.type,defaultValue:n.defaultValue,deprecationReason:n.deprecationReason,extensions:n.extensions,astNode:n.astNode}));return{name:this.name,description:this.description,fields:t,extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes}}toString(){return this.name}toJSON(){return this.toString()}};function Gs(e){let t=Un(e.fields);return Dt(t)||S(!1,`${e.name} fields must be an object with field names as keys or a function which returns such an object.`),Fe(t,(n,r)=>(!("resolve"in n)||S(!1,`${e.name}.${r} field has a resolve property, but Input Types cannot define resolvers.`),{name:me(r),description:n.description,type:n.type,defaultValue:n.defaultValue,deprecationReason:n.deprecationReason,extensions:fe(n.extensions),astNode:n.astNode}))}function We(e){return v(e.type)&&e.defaultValue===void 0}function Rt(e,t){return e===t?!0:v(e)&&v(t)||F(e)&&F(t)?Rt(e.ofType,t.ofType):!1}function Ue(e,t,n){return t===n?!0:v(n)?v(t)?Ue(e,t.ofType,n.ofType):!1:v(t)?Ue(e,t.ofType,n):F(n)?F(t)?Ue(e,t.ofType,n.ofType):!1:F(t)?!1:ae(n)&&(x(t)||A(t))&&e.isSubType(n,t)}function qt(e,t,n){return t===n?!0:ae(t)?ae(n)?e.getPossibleTypes(t).some(r=>e.isSubType(n,r)):e.isSubType(t,n):ae(n)?e.isSubType(n,t):!1}var Yt=2147483647,Jt=-2147483648,Yr=new se({name:"Int",description:"The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.",serialize(e){let t=Xt(e);if(typeof t=="boolean")return t?1:0;let n=t;if(typeof t=="string"&&t!==""&&(n=Number(t)),typeof n!="number"||!Number.isInteger(n))throw new f(`Int cannot represent non-integer value: ${m(t)}`);if(n>Yt||n<Jt)throw new f("Int cannot represent non 32-bit signed integer value: "+m(t));return n},parseValue(e){if(typeof e!="number"||!Number.isInteger(e))throw new f(`Int cannot represent non-integer value: ${m(e)}`);if(e>Yt||e<Jt)throw new f(`Int cannot represent non 32-bit signed integer value: ${e}`);return e},parseLiteral(e){if(e.kind!==c.INT)throw new f(`Int cannot represent non-integer value: ${k(e)}`,{nodes:e});let t=parseInt(e.value,10);if(t>Yt||t<Jt)throw new f(`Int cannot represent non 32-bit signed integer value: ${e.value}`,{nodes:e});return t}}),Jr=new se({name:"Float",description:"The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).",serialize(e){let t=Xt(e);if(typeof t=="boolean")return t?1:0;let n=t;if(typeof t=="string"&&t!==""&&(n=Number(t)),typeof n!="number"||!Number.isFinite(n))throw new f(`Float cannot represent non numeric value: ${m(t)}`);return n},parseValue(e){if(typeof e!="number"||!Number.isFinite(e))throw new f(`Float cannot represent non numeric value: ${m(e)}`);return e},parseLiteral(e){if(e.kind!==c.FLOAT&&e.kind!==c.INT)throw new f(`Float cannot represent non numeric value: ${k(e)}`,{nodes:e});return parseFloat(e.value)}}),Q=new se({name:"String",description:"The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",serialize(e){let t=Xt(e);if(typeof t=="string")return t;if(typeof t=="boolean")return t?"true":"false";if(typeof t=="number"&&Number.isFinite(t))return t.toString();throw new f(`String cannot represent value: ${m(e)}`)},parseValue(e){if(typeof e!="string")throw new f(`String cannot represent a non string value: ${m(e)}`);return e},parseLiteral(e){if(e.kind!==c.STRING)throw new f(`String cannot represent a non string value: ${k(e)}`,{nodes:e});return e.value}}),ce=new se({name:"Boolean",description:"The `Boolean` scalar type represents `true` or `false`.",serialize(e){let t=Xt(e);if(typeof t=="boolean")return t;if(Number.isFinite(t))return t!==0;throw new f(`Boolean cannot represent a non boolean value: ${m(t)}`)},parseValue(e){if(typeof e!="boolean")throw new f(`Boolean cannot represent a non boolean value: ${m(e)}`);return e},parseLiteral(e){if(e.kind!==c.BOOLEAN)throw new f(`Boolean cannot represent a non boolean value: ${k(e)}`,{nodes:e});return e.value}}),Kt=new se({name:"ID",description:'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.',serialize(e){let t=Xt(e);if(typeof t=="string")return t;if(Number.isInteger(t))return String(t);throw new f(`ID cannot represent value: ${m(e)}`)},parseValue(e){if(typeof e=="string")return e;if(typeof e=="number"&&Number.isInteger(e))return e.toString();throw new f(`ID cannot represent value: ${m(e)}`)},parseLiteral(e){if(e.kind!==c.STRING&&e.kind!==c.INT)throw new f("ID cannot represent a non-string and non-integer value: "+k(e),{nodes:e});return e.value}}),Qe=Object.freeze([Q,Yr,Jr,ce,Kt]);function Ze(e){return Qe.some(({name:t})=>e.name===t)}function Xt(e){if(K(e)){if(typeof e.valueOf=="function"){let t=e.valueOf();if(!K(t))return t}if(typeof e.toJSON=="function")return e.toJSON()}return e}function ft(e){return ue(e,pe)}function oo(e){if(!ft(e))throw new Error(`Expected ${m(e)} to be a GraphQL directive.`);return e}var pe=class{constructor(t){this.name=me(t.name),this.description=t.description,this.locations=t.locations,this.isRepeatable=t.isRepeatable??!1,this.extensions=fe(t.extensions),this.astNode=t.astNode,Array.isArray(t.locations)||S(!1,`@${t.name} locations must be an Array.`);let n=t.args??{};K(n)&&!Array.isArray(n)||S(!1,`@${t.name} args must be an object with argument names as keys.`),this.args=Br(n)}get[Symbol.toStringTag](){return"GraphQLDirective"}toConfig(){return{name:this.name,description:this.description,locations:this.locations,args:qr(this.args),isRepeatable:this.isRepeatable,extensions:this.extensions,astNode:this.astNode}}toString(){return"@"+this.name}toJSON(){return this.toString()}},zt=new pe({name:"include",description:"Directs the executor to include this field or fragment only when the `if` argument is true.",locations:[b.FIELD,b.FRAGMENT_SPREAD,b.INLINE_FRAGMENT],args:{if:{type:new O(ce),description:"Included when true."}}}),Ht=new pe({name:"skip",description:"Directs the executor to skip this field or fragment when the `if` argument is true.",locations:[b.FIELD,b.FRAGMENT_SPREAD,b.INLINE_FRAGMENT],args:{if:{type:new O(ce),description:"Skipped when true."}}}),Wt="No longer supported",mt=new pe({name:"deprecated",description:"Marks an element of a GraphQL schema as no longer supported.",locations:[b.FIELD_DEFINITION,b.ARGUMENT_DEFINITION,b.INPUT_FIELD_DEFINITION,b.ENUM_VALUE],args:{reason:{type:Q,description:"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).",defaultValue:Wt}}}),Zt=new pe({name:"specifiedBy",description:"Exposes a URL that specifies the behavior of this scalar.",locations:[b.SCALAR],args:{url:{type:new O(Q),description:"The URL that specifies the behavior of this scalar."}}}),he=Object.freeze([zt,Ht,mt,Zt]);function en(e){return he.some(({name:t})=>t===e.name)}function xt(e){return typeof e=="object"&&typeof e?.[Symbol.iterator]=="function"}function xe(e,t){if(v(t)){let n=xe(e,t.ofType);return n?.kind===c.NULL?null:n}if(e===null)return{kind:c.NULL};if(e===void 0)return null;if(F(t)){let n=t.ofType;if(xt(e)){let r=[];for(let i of e){let o=xe(i,n);o!=null&&r.push(o)}return{kind:c.LIST,values:r}}return xe(e,n)}if(L(t)){if(!K(e))return null;let n=[];for(let r of Object.values(t.getFields())){let i=xe(e[r.name],r.type);i&&n.push({kind:c.OBJECT_FIELD,name:{kind:c.NAME,value:r.name},value:i})}return{kind:c.OBJECT,fields:n}}if(te(t)){let n=t.serialize(e);if(n==null)return null;if(typeof n=="boolean")return{kind:c.BOOLEAN,value:n};if(typeof n=="number"&&Number.isFinite(n)){let r=String(n);return so.test(r)?{kind:c.INT,value:r}:{kind:c.FLOAT,value:r}}if(typeof n=="string")return C(t)?{kind:c.ENUM,value:n}:t===Kt&&so.test(n)?{kind:c.INT,value:n}:{kind:c.STRING,value:n};throw new TypeError(`Cannot convert value to AST: ${m(n)}.`)}w(!1,"Unexpected input type: "+m(t))}var so=/^-?(?:0|[1-9][0-9]*)$/;var Lt=new ee({name:"__Schema",description:"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",fields:()=>({description:{type:Q,resolve:e=>e.description},types:{description:"A list of all types supported by this server.",type:new O(new G(new O(ge))),resolve(e){return Object.values(e.getTypeMap())}},queryType:{description:"The type that query operations will be rooted at.",type:new O(ge),resolve:e=>e.getQueryType()},mutationType:{description:"If this server supports mutation, the type that mutation operations will be rooted at.",type:ge,resolve:e=>e.getMutationType()},subscriptionType:{description:"If this server support subscription, the type that subscription operations will be rooted at.",type:ge,resolve:e=>e.getSubscriptionType()},directives:{description:"A list of all directives supported by this server.",type:new O(new G(new O(Mn))),resolve:e=>e.getDirectives()}})}),Mn=new ee({name:"__Directive",description:`A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.

In some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.`,fields:()=>({name:{type:new O(Q),resolve:e=>e.name},description:{type:Q,resolve:e=>e.description},isRepeatable:{type:new O(ce),resolve:e=>e.isRepeatable},locations:{type:new O(new G(new O(jn))),resolve:e=>e.locations},args:{type:new O(new G(new O(wt))),args:{includeDeprecated:{type:ce,defaultValue:!1}},resolve(e,{includeDeprecated:t}){return t?e.args:e.args.filter(n=>n.deprecationReason==null)}}})}),jn=new de({name:"__DirectiveLocation",description:"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",values:{QUERY:{value:b.QUERY,description:"Location adjacent to a query operation."},MUTATION:{value:b.MUTATION,description:"Location adjacent to a mutation operation."},SUBSCRIPTION:{value:b.SUBSCRIPTION,description:"Location adjacent to a subscription operation."},FIELD:{value:b.FIELD,description:"Location adjacent to a field."},FRAGMENT_DEFINITION:{value:b.FRAGMENT_DEFINITION,description:"Location adjacent to a fragment definition."},FRAGMENT_SPREAD:{value:b.FRAGMENT_SPREAD,description:"Location adjacent to a fragment spread."},INLINE_FRAGMENT:{value:b.INLINE_FRAGMENT,description:"Location adjacent to an inline fragment."},VARIABLE_DEFINITION:{value:b.VARIABLE_DEFINITION,description:"Location adjacent to a variable definition."},SCHEMA:{value:b.SCHEMA,description:"Location adjacent to a schema definition."},SCALAR:{value:b.SCALAR,description:"Location adjacent to a scalar definition."},OBJECT:{value:b.OBJECT,description:"Location adjacent to an object type definition."},FIELD_DEFINITION:{value:b.FIELD_DEFINITION,description:"Location adjacent to a field definition."},ARGUMENT_DEFINITION:{value:b.ARGUMENT_DEFINITION,description:"Location adjacent to an argument definition."},INTERFACE:{value:b.INTERFACE,description:"Location adjacent to an interface definition."},UNION:{value:b.UNION,description:"Location adjacent to a union definition."},ENUM:{value:b.ENUM,description:"Location adjacent to an enum definition."},ENUM_VALUE:{value:b.ENUM_VALUE,description:"Location adjacent to an enum value definition."},INPUT_OBJECT:{value:b.INPUT_OBJECT,description:"Location adjacent to an input object type definition."},INPUT_FIELD_DEFINITION:{value:b.INPUT_FIELD_DEFINITION,description:"Location adjacent to an input object field definition."}}}),ge=new ee({name:"__Type",description:"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",fields:()=>({kind:{type:new O(Qn),resolve(e){if(W(e))return U.SCALAR;if(A(e))return U.OBJECT;if(x(e))return U.INTERFACE;if(M(e))return U.UNION;if(C(e))return U.ENUM;if(L(e))return U.INPUT_OBJECT;if(F(e))return U.LIST;if(v(e))return U.NON_NULL;w(!1,`Unexpected type: "${m(e)}".`)}},name:{type:Q,resolve:e=>"name"in e?e.name:void 0},description:{type:Q,resolve:e=>"description"in e?e.description:void 0},specifiedByURL:{type:Q,resolve:e=>"specifiedByURL"in e?e.specifiedByURL:void 0},fields:{type:new G(new O(Pn)),args:{includeDeprecated:{type:ce,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(A(e)||x(e)){let n=Object.values(e.getFields());return t?n:n.filter(r=>r.deprecationReason==null)}}},interfaces:{type:new G(new O(ge)),resolve(e){if(A(e)||x(e))return e.getInterfaces()}},possibleTypes:{type:new G(new O(ge)),resolve(e,t,n,{schema:r}){if(ae(e))return r.getPossibleTypes(e)}},enumValues:{type:new G(new O(Gn)),args:{includeDeprecated:{type:ce,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(C(e)){let n=e.getValues();return t?n:n.filter(r=>r.deprecationReason==null)}}},inputFields:{type:new G(new O(wt)),args:{includeDeprecated:{type:ce,defaultValue:!1}},resolve(e,{includeDeprecated:t}){if(L(e)){let n=Object.values(e.getFields());return t?n:n.filter(r=>r.deprecationReason==null)}}},ofType:{type:ge,resolve:e=>"ofType"in e?e.ofType:void 0}})}),Pn=new ee({name:"__Field",description:"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",fields:()=>({name:{type:new O(Q),resolve:e=>e.name},description:{type:Q,resolve:e=>e.description},args:{type:new O(new G(new O(wt))),args:{includeDeprecated:{type:ce,defaultValue:!1}},resolve(e,{includeDeprecated:t}){return t?e.args:e.args.filter(n=>n.deprecationReason==null)}},type:{type:new O(ge),resolve:e=>e.type},isDeprecated:{type:new O(ce),resolve:e=>e.deprecationReason!=null},deprecationReason:{type:Q,resolve:e=>e.deprecationReason}})}),wt=new ee({name:"__InputValue",description:"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",fields:()=>({name:{type:new O(Q),resolve:e=>e.name},description:{type:Q,resolve:e=>e.description},type:{type:new O(ge),resolve:e=>e.type},defaultValue:{type:Q,description:"A GraphQL-formatted string representing the default value for this input value.",resolve(e){let{type:t,defaultValue:n}=e,r=xe(n,t);return r?k(r):null}},isDeprecated:{type:new O(ce),resolve:e=>e.deprecationReason!=null},deprecationReason:{type:Q,resolve:e=>e.deprecationReason}})}),Gn=new ee({name:"__EnumValue",description:"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",fields:()=>({name:{type:new O(Q),resolve:e=>e.name},description:{type:Q,resolve:e=>e.description},isDeprecated:{type:new O(ce),resolve:e=>e.deprecationReason!=null},deprecationReason:{type:Q,resolve:e=>e.deprecationReason}})}),U;(function(e){e.SCALAR="SCALAR",e.OBJECT="OBJECT",e.INTERFACE="INTERFACE",e.UNION="UNION",e.ENUM="ENUM",e.INPUT_OBJECT="INPUT_OBJECT",e.LIST="LIST",e.NON_NULL="NON_NULL"})(U||(U={}));var Qn=new de({name:"__TypeKind",description:"An enum describing what kind of type a given `__Type` is.",values:{SCALAR:{value:U.SCALAR,description:"Indicates this type is a scalar."},OBJECT:{value:U.OBJECT,description:"Indicates this type is an object. `fields` and `interfaces` are valid fields."},INTERFACE:{value:U.INTERFACE,description:"Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields."},UNION:{value:U.UNION,description:"Indicates this type is a union. `possibleTypes` is a valid field."},ENUM:{value:U.ENUM,description:"Indicates this type is an enum. `enumValues` is a valid field."},INPUT_OBJECT:{value:U.INPUT_OBJECT,description:"Indicates this type is an input object. `inputFields` is a valid field."},LIST:{value:U.LIST,description:"Indicates this type is a list. `ofType` is a valid field."},NON_NULL:{value:U.NON_NULL,description:"Indicates this type is a non-null. `ofType` is a valid field."}}}),et={name:"__schema",type:new O(Lt),description:"Access the current type schema of this server.",args:[],resolve:(e,t,n,{schema:r})=>r,deprecationReason:void 0,extensions:Object.create(null),astNode:void 0},tt={name:"__type",type:ge,description:"Request the type information of a single type.",args:[{name:"name",description:void 0,type:new O(Q),defaultValue:void 0,deprecationReason:void 0,extensions:Object.create(null),astNode:void 0}],resolve:(e,{name:t},n,{schema:r})=>r.getType(t),deprecationReason:void 0,extensions:Object.create(null),astNode:void 0},nt={name:"__typename",type:new O(Q),description:"The name of the current Object type at runtime.",args:[],resolve:(e,t,n,{parentType:r})=>r.name,deprecationReason:void 0,extensions:Object.create(null),astNode:void 0},Be=Object.freeze([Lt,Mn,jn,ge,Pn,wt,Gn,Qn]);function Ie(e){return Be.some(({name:t})=>e.name===t)}function Kr(e){return ue(e,ve)}function Ft(e){if(!Kr(e))throw new Error(`Expected ${m(e)} to be a GraphQL schema.`);return e}var ve=class{constructor(t){this.__validationErrors=t.assumeValid===!0?[]:void 0,K(t)||S(!1,"Must provide configuration object."),!t.types||Array.isArray(t.types)||S(!1,`"types" must be Array if provided but got: ${m(t.types)}.`),!t.directives||Array.isArray(t.directives)||S(!1,`"directives" must be Array if provided but got: ${m(t.directives)}.`),this.description=t.description,this.extensions=fe(t.extensions),this.astNode=t.astNode,this.extensionASTNodes=t.extensionASTNodes??[],this._queryType=t.query,this._mutationType=t.mutation,this._subscriptionType=t.subscription,this._directives=t.directives??he;let n=new Set(t.types);if(t.types!=null)for(let r of t.types)n.delete(r),$e(r,n);this._queryType!=null&&$e(this._queryType,n),this._mutationType!=null&&$e(this._mutationType,n),this._subscriptionType!=null&&$e(this._subscriptionType,n);for(let r of this._directives)if(ft(r))for(let i of r.args)$e(i.type,n);$e(Lt,n),this._typeMap=Object.create(null),this._subTypeMap=Object.create(null),this._implementationsMap=Object.create(null);for(let r of n){if(r==null)continue;let i=r.name;if(i!=null||S(!1,"One of the provided types for building the Schema is missing a name."),this._typeMap[i]!==void 0)throw new Error(`Schema must contain uniquely named types but contains multiple types named "${i}".`);if(this._typeMap[i]=r,x(r)){for(let o of r.getInterfaces())if(x(o)){let s=this._implementationsMap[o.name];s===void 0&&(s=this._implementationsMap[o.name]={objects:[],interfaces:[]}),s.interfaces.push(r)}}else if(A(r)){for(let o of r.getInterfaces())if(x(o)){let s=this._implementationsMap[o.name];s===void 0&&(s=this._implementationsMap[o.name]={objects:[],interfaces:[]}),s.objects.push(r)}}}}get[Symbol.toStringTag](){return"GraphQLSchema"}getQueryType(){return this._queryType}getMutationType(){return this._mutationType}getSubscriptionType(){return this._subscriptionType}getRootType(t){switch(t){case B.QUERY:return this.getQueryType();case B.MUTATION:return this.getMutationType();case B.SUBSCRIPTION:return this.getSubscriptionType()}}getTypeMap(){return this._typeMap}getType(t){return this.getTypeMap()[t]}getPossibleTypes(t){return M(t)?t.getTypes():this.getImplementations(t).objects}getImplementations(t){return this._implementationsMap[t.name]??{objects:[],interfaces:[]}}isSubType(t,n){let r=this._subTypeMap[t.name];if(r===void 0){if(r=Object.create(null),M(t))for(let i of t.getTypes())r[i.name]=!0;else{let i=this.getImplementations(t);for(let o of i.objects)r[o.name]=!0;for(let o of i.interfaces)r[o.name]=!0}this._subTypeMap[t.name]=r}return r[n.name]!==void 0}getDirectives(){return this._directives}getDirective(t){return this.getDirectives().find(n=>n.name===t)}toConfig(){return{description:this.description,query:this.getQueryType(),mutation:this.getMutationType(),subscription:this.getSubscriptionType(),types:Object.values(this.getTypeMap()),directives:this.getDirectives(),extensions:this.extensions,astNode:this.astNode,extensionASTNodes:this.extensionASTNodes,assumeValid:this.__validationErrors!==void 0}}};function $e(e,t){let n=q(e);if(!t.has(n)){if(t.add(n),M(n))for(let r of n.getTypes())$e(r,t);else if(A(n)||x(n)){for(let r of n.getInterfaces())$e(r,t);for(let r of Object.values(n.getFields())){$e(r.type,t);for(let i of r.args)$e(i.type,t)}}else if(L(n))for(let r of Object.values(n.getFields()))$e(r.type,t)}return t}function nn(e){if(Ft(e),e.__validationErrors)return e.__validationErrors;let t=new Xr(e);Qs(t),Bs(t),qs(t);let n=t.getErrors();return e.__validationErrors=n,n}function kt(e){let t=nn(e);if(t.length!==0)throw new Error(t.map(n=>n.message).join(`

`))}var Xr=class{constructor(t){this._errors=[],this.schema=t}reportError(t,n){let r=Array.isArray(n)?n.filter(Boolean):n;this._errors.push(new f(t,{nodes:r}))}getErrors(){return this._errors}};function Qs(e){let t=e.schema;t.getQueryType()==null&&e.reportError("Query root type must be provided.",t.astNode);let n=new Pe;for(let r of Object.values(B)){let i=t.getRootType(r);if(i!=null)if(A(i))n.add(i,r);else{let o=Vi(r),s=m(i);e.reportError(r===B.QUERY?`${o} root type must be Object type, it cannot be ${s}.`:`${o} root type must be Object type if provided, it cannot be ${s}.`,ao(t,r)??i.astNode)}}for(let[r,i]of n.entries())if(i.length>1){let o=Ci(i);e.reportError(`All root types must be different, "${r.name}" type is used as ${o} root types.`,i.map(s=>ao(t,s)))}}function ao(e,t){return[e.astNode,...e.extensionASTNodes].flatMap(n=>n?.operationTypes??[]).find(n=>n.operation===t)?.type}function Bs(e){for(let t of e.schema.getDirectives()){if(!ft(t)){e.reportError(`Expected directive but got: ${m(t)}.`,t?.astNode);continue}dt(e,t);for(let n of t.args)dt(e,n),Z(n.type)||e.reportError(`The type of @${t.name}(${n.name}:) must be Input Type but got: ${m(n.type)}.`,n.astNode),Re(n)&&n.deprecationReason!=null&&e.reportError(`Required argument @${t.name}(${n.name}:) cannot be deprecated.`,[zr(n.astNode),n.astNode?.type])}}function dt(e,t){t.name.startsWith("__")&&e.reportError(`Name "${t.name}" must not begin with "__", which is reserved by GraphQL introspection.`,t.astNode)}function qs(e){let t=Hs(e),n=e.schema.getTypeMap();for(let r of Object.values(n)){if(!He(r)){e.reportError(`Expected GraphQL named type but got: ${m(r)}.`,r.astNode);continue}Ie(r)||dt(e,r),A(r)||x(r)?(co(e,r),po(e,r)):M(r)?Ks(e,r):C(r)?Xs(e,r):L(r)&&(zs(e,r),t(r))}}function co(e,t){let n=Object.values(t.getFields());n.length===0&&e.reportError(`Type ${t.name} must define one or more fields.`,[t.astNode,...t.extensionASTNodes]);for(let r of n){dt(e,r),Ae(r.type)||e.reportError(`The type of ${t.name}.${r.name} must be Output Type but got: ${m(r.type)}.`,r.astNode?.type);for(let i of r.args){let o=i.name;dt(e,i),Z(i.type)||e.reportError(`The type of ${t.name}.${r.name}(${o}:) must be Input Type but got: ${m(i.type)}.`,i.astNode?.type),Re(i)&&i.deprecationReason!=null&&e.reportError(`Required argument ${t.name}.${r.name}(${o}:) cannot be deprecated.`,[zr(i.astNode),i.astNode?.type])}}}function po(e,t){let n=Object.create(null);for(let r of t.getInterfaces()){if(!x(r)){e.reportError(`Type ${m(t)} must only implement Interface types, it cannot implement ${m(r)}.`,tn(t,r));continue}if(t===r){e.reportError(`Type ${t.name} cannot implement itself because it would create a circular reference.`,tn(t,r));continue}if(n[r.name]){e.reportError(`Type ${t.name} can only implement ${r.name} once.`,tn(t,r));continue}n[r.name]=!0,Js(e,t,r),Ys(e,t,r)}}function Ys(e,t,n){let r=t.getFields();for(let i of Object.values(n.getFields())){let o=i.name,s=r[o];if(!s){e.reportError(`Interface field ${n.name}.${o} expected but ${t.name} does not provide it.`,[i.astNode,t.astNode,...t.extensionASTNodes]);continue}Ue(e.schema,s.type,i.type)||e.reportError(`Interface field ${n.name}.${o} expects type ${m(i.type)} but ${t.name}.${o} is type ${m(s.type)}.`,[i.astNode?.type,s.astNode?.type]);for(let a of i.args){let p=a.name,u=s.args.find(l=>l.name===p);if(!u){e.reportError(`Interface field argument ${n.name}.${o}(${p}:) expected but ${t.name}.${o} does not provide it.`,[a.astNode,s.astNode]);continue}Rt(a.type,u.type)||e.reportError(`Interface field argument ${n.name}.${o}(${p}:) expects type ${m(a.type)} but ${t.name}.${o}(${p}:) is type ${m(u.type)}.`,[a.astNode?.type,u.astNode?.type])}for(let a of s.args){let p=a.name;!i.args.find(l=>l.name===p)&&Re(a)&&e.reportError(`Object field ${t.name}.${o} includes required argument ${p} that is missing from the Interface field ${n.name}.${o}.`,[a.astNode,i.astNode])}}}function Js(e,t,n){let r=t.getInterfaces();for(let i of n.getInterfaces())r.includes(i)||e.reportError(i===t?`Type ${t.name} cannot implement ${n.name} because it would create a circular reference.`:`Type ${t.name} must implement ${i.name} because it is implemented by ${n.name}.`,[...tn(n,i),...tn(t,n)])}function Ks(e,t){let n=t.getTypes();n.length===0&&e.reportError(`Union type ${t.name} must define one or more member types.`,[t.astNode,...t.extensionASTNodes]);let r=Object.create(null);for(let i of n){if(r[i.name]){e.reportError(`Union type ${t.name} can only include type ${i.name} once.`,uo(t,i.name));continue}r[i.name]=!0,A(i)||e.reportError(`Union type ${t.name} can only include Object types, it cannot include ${m(i)}.`,uo(t,String(i)))}}function Xs(e,t){let n=t.getValues();n.length===0&&e.reportError(`Enum type ${t.name} must define one or more values.`,[t.astNode,...t.extensionASTNodes]);for(let r of n)dt(e,r)}function zs(e,t){let n=Object.values(t.getFields());n.length===0&&e.reportError(`Input Object type ${t.name} must define one or more fields.`,[t.astNode,...t.extensionASTNodes]);for(let r of n)dt(e,r),Z(r.type)||e.reportError(`The type of ${t.name}.${r.name} must be Input Type but got: ${m(r.type)}.`,r.astNode?.type),We(r)&&r.deprecationReason!=null&&e.reportError(`Required input field ${t.name}.${r.name} cannot be deprecated.`,[zr(r.astNode),r.astNode?.type])}function Hs(e){let t=Object.create(null),n=[],r=Object.create(null);return i;function i(o){if(t[o.name])return;t[o.name]=!0,r[o.name]=n.length;let s=Object.values(o.getFields());for(let a of s)if(v(a.type)&&L(a.type.ofType)){let p=a.type.ofType,u=r[p.name];if(n.push(a),u===void 0)i(p);else{let l=n.slice(u),h=l.map(y=>y.name).join(".");e.reportError(`Cannot reference Input Object "${p.name}" within itself through a series of non-null fields: "${h}".`,l.map(y=>y.astNode))}n.pop()}r[o.name]=void 0}}function tn(e,t){let{astNode:n,extensionASTNodes:r}=e;return(n!=null?[n,...r]:r).flatMap(o=>o.interfaces??[]).filter(o=>o.name.value===t.name)}function uo(e,t){let{astNode:n,extensionASTNodes:r}=e;return(n!=null?[n,...r]:r).flatMap(o=>o.types??[]).filter(o=>o.name.value===t)}function zr(e){return e?.directives?.find(t=>t.name.value===mt.name)}function Y(e,t){switch(t.kind){case c.LIST_TYPE:{let n=Y(e,t.type);return n&&new G(n)}case c.NON_NULL_TYPE:{let n=Y(e,t.type);return n&&new O(n)}case c.NAMED_TYPE:return e.getType(t.name.value)}}var rt=class{constructor(t,n,r){this._schema=t,this._typeStack=[],this._parentTypeStack=[],this._inputTypeStack=[],this._fieldDefStack=[],this._defaultValueStack=[],this._directive=null,this._argument=null,this._enumValue=null,this._getFieldDef=r??Ws,n&&(Z(n)&&this._inputTypeStack.push(n),ye(n)&&this._parentTypeStack.push(n),Ae(n)&&this._typeStack.push(n))}get[Symbol.toStringTag](){return"TypeInfo"}getType(){if(this._typeStack.length>0)return this._typeStack[this._typeStack.length-1]}getParentType(){if(this._parentTypeStack.length>0)return this._parentTypeStack[this._parentTypeStack.length-1]}getInputType(){if(this._inputTypeStack.length>0)return this._inputTypeStack[this._inputTypeStack.length-1]}getParentInputType(){if(this._inputTypeStack.length>1)return this._inputTypeStack[this._inputTypeStack.length-2]}getFieldDef(){if(this._fieldDefStack.length>0)return this._fieldDefStack[this._fieldDefStack.length-1]}getDefaultValue(){if(this._defaultValueStack.length>0)return this._defaultValueStack[this._defaultValueStack.length-1]}getDirective(){return this._directive}getArgument(){return this._argument}getEnumValue(){return this._enumValue}enter(t){let n=this._schema;switch(t.kind){case c.SELECTION_SET:{let r=q(this.getType());this._parentTypeStack.push(ye(r)?r:void 0);break}case c.FIELD:{let r=this.getParentType(),i,o;r&&(i=this._getFieldDef(n,r,t),i&&(o=i.type)),this._fieldDefStack.push(i),this._typeStack.push(Ae(o)?o:void 0);break}case c.DIRECTIVE:this._directive=n.getDirective(t.name.value);break;case c.OPERATION_DEFINITION:{let r=n.getRootType(t.operation);this._typeStack.push(A(r)?r:void 0);break}case c.INLINE_FRAGMENT:case c.FRAGMENT_DEFINITION:{let r=t.typeCondition,i=r?Y(n,r):q(this.getType());this._typeStack.push(Ae(i)?i:void 0);break}case c.VARIABLE_DEFINITION:{let r=Y(n,t.type);this._inputTypeStack.push(Z(r)?r:void 0);break}case c.ARGUMENT:{let r,i,o=this.getDirective()??this.getFieldDef();o&&(r=o.args.find(s=>s.name===t.name.value),r&&(i=r.type)),this._argument=r,this._defaultValueStack.push(r?r.defaultValue:void 0),this._inputTypeStack.push(Z(i)?i:void 0);break}case c.LIST:{let r=At(this.getInputType()),i=F(r)?r.ofType:r;this._defaultValueStack.push(void 0),this._inputTypeStack.push(Z(i)?i:void 0);break}case c.OBJECT_FIELD:{let r=q(this.getInputType()),i,o;L(r)&&(o=r.getFields()[t.name.value],o&&(i=o.type)),this._defaultValueStack.push(o?o.defaultValue:void 0),this._inputTypeStack.push(Z(i)?i:void 0);break}case c.ENUM:{let r=q(this.getInputType()),i;C(r)&&(i=r.getValue(t.value)),this._enumValue=i;break}default:}}leave(t){switch(t.kind){case c.SELECTION_SET:this._parentTypeStack.pop();break;case c.FIELD:this._fieldDefStack.pop(),this._typeStack.pop();break;case c.DIRECTIVE:this._directive=null;break;case c.OPERATION_DEFINITION:case c.INLINE_FRAGMENT:case c.FRAGMENT_DEFINITION:this._typeStack.pop();break;case c.VARIABLE_DEFINITION:this._inputTypeStack.pop();break;case c.ARGUMENT:this._argument=null,this._defaultValueStack.pop(),this._inputTypeStack.pop();break;case c.LIST:case c.OBJECT_FIELD:this._defaultValueStack.pop(),this._inputTypeStack.pop();break;case c.ENUM:this._enumValue=null;break;default:}}};function Ws(e,t,n){let r=n.name.value;if(r===et.name&&e.getQueryType()===t)return et;if(r===tt.name&&e.getQueryType()===t)return tt;if(r===nt.name&&ye(t))return nt;if(A(t)||x(t))return t.getFields()[r]}function Vt(e,t){return{enter(...n){let r=n[0];e.enter(r);let i=ut(t,r.kind).enter;if(i){let o=i.apply(t,n);return o!==void 0&&(e.leave(r),Pt(o)&&e.enter(o)),o}},leave(...n){let r=n[0],i=ut(t,r.kind).leave,o;return i&&(o=i.apply(t,n)),e.leave(r),o}}}function lo(e){return rn(e)||on(e)||sn(e)}function rn(e){return e.kind===c.OPERATION_DEFINITION||e.kind===c.FRAGMENT_DEFINITION}function fo(e){return e.kind===c.FIELD||e.kind===c.FRAGMENT_SPREAD||e.kind===c.INLINE_FRAGMENT}function Hr(e){return e.kind===c.VARIABLE||e.kind===c.INT||e.kind===c.FLOAT||e.kind===c.STRING||e.kind===c.BOOLEAN||e.kind===c.NULL||e.kind===c.ENUM||e.kind===c.LIST||e.kind===c.OBJECT}function Bn(e){return Hr(e)&&(e.kind===c.LIST?e.values.some(Bn):e.kind===c.OBJECT?e.fields.some(t=>Bn(t.value)):e.kind!==c.VARIABLE)}function mo(e){return e.kind===c.NAMED_TYPE||e.kind===c.LIST_TYPE||e.kind===c.NON_NULL_TYPE}function on(e){return e.kind===c.SCHEMA_DEFINITION||Ce(e)||e.kind===c.DIRECTIVE_DEFINITION}function Ce(e){return e.kind===c.SCALAR_TYPE_DEFINITION||e.kind===c.OBJECT_TYPE_DEFINITION||e.kind===c.INTERFACE_TYPE_DEFINITION||e.kind===c.UNION_TYPE_DEFINITION||e.kind===c.ENUM_TYPE_DEFINITION||e.kind===c.INPUT_OBJECT_TYPE_DEFINITION}function sn(e){return e.kind===c.SCHEMA_EXTENSION||ht(e)}function ht(e){return e.kind===c.SCALAR_TYPE_EXTENSION||e.kind===c.OBJECT_TYPE_EXTENSION||e.kind===c.INTERFACE_TYPE_EXTENSION||e.kind===c.UNION_TYPE_EXTENSION||e.kind===c.ENUM_TYPE_EXTENSION||e.kind===c.INPUT_OBJECT_TYPE_EXTENSION}function qn(e){return{Document(t){for(let n of t.definitions)if(!rn(n)){let r=n.kind===c.SCHEMA_DEFINITION||n.kind===c.SCHEMA_EXTENSION?"schema":'"'+n.name.value+'"';e.reportError(new f(`The ${r} definition is not executable.`,{nodes:n}))}return!1}}}function Yn(e){return{Field(t){let n=e.getParentType();if(n&&!e.getFieldDef()){let i=e.getSchema(),o=t.name.value,s=ie("to use an inline fragment on",Zs(i,n,o));s===""&&(s=ie(ea(n,o))),e.reportError(new f(`Cannot query field "${o}" on type "${n.name}".`+s,{nodes:t}))}}}}function Zs(e,t,n){if(!ae(t))return[];let r=new Set,i=Object.create(null);for(let o of e.getPossibleTypes(t))if(!!o.getFields()[n]){r.add(o),i[o.name]=1;for(let s of o.getInterfaces())!s.getFields()[n]||(r.add(s),i[s.name]=(i[s.name]??0)+1)}return[...r].sort((o,s)=>{let a=i[s.name]-i[o.name];return a!==0?a:x(o)&&e.isSubType(o,s)?-1:x(s)&&e.isSubType(s,o)?1:Ge(o.name,s.name)}).map(o=>o.name)}function ea(e,t){if(A(e)||x(e)){let n=Object.keys(e.getFields());return le(t,n)}return[]}function Jn(e){return{InlineFragment(t){let n=t.typeCondition;if(n){let r=Y(e.getSchema(),n);if(r&&!ye(r)){let i=k(n);e.reportError(new f(`Fragment cannot condition on non composite type "${i}".`,{nodes:n}))}}},FragmentDefinition(t){let n=Y(e.getSchema(),t.typeCondition);if(n&&!ye(n)){let r=k(t.typeCondition);e.reportError(new f(`Fragment "${t.name.value}" cannot condition on non composite type "${r}".`,{nodes:t.typeCondition}))}}}}function Kn(e){return{...Wr(e),Argument(t){let n=e.getArgument(),r=e.getFieldDef(),i=e.getParentType();if(!n&&r&&i){let o=t.name.value,s=r.args.map(p=>p.name),a=le(o,s);e.reportError(new f(`Unknown argument "${o}" on field "${i.name}.${r.name}".`+ie(a),{nodes:t}))}}}}function Wr(e){let t=Object.create(null),n=e.getSchema(),r=n?n.getDirectives():he;for(let o of r)t[o.name]=o.args.map(s=>s.name);let i=e.getDocument().definitions;for(let o of i)if(o.kind===c.DIRECTIVE_DEFINITION){let s=o.arguments??[];t[o.name.value]=s.map(a=>a.name.value)}return{Directive(o){let s=o.name.value,a=t[s];if(o.arguments&&a)for(let p of o.arguments){let u=p.name.value;if(!a.includes(u)){let l=le(u,a);e.reportError(new f(`Unknown argument "${u}" on directive "@${s}".`+ie(l),{nodes:p}))}}return!1}}}function an(e){let t=Object.create(null),n=e.getSchema(),r=n?n.getDirectives():he;for(let o of r)t[o.name]=o.locations;let i=e.getDocument().definitions;for(let o of i)o.kind===c.DIRECTIVE_DEFINITION&&(t[o.name.value]=o.locations.map(s=>s.value));return{Directive(o,s,a,p,u){let l=o.name.value,h=t[l];if(!h){e.reportError(new f(`Unknown directive "@${l}".`,{nodes:o}));return}let y=ta(u);y&&!h.includes(y)&&e.reportError(new f(`Directive "@${l}" may not be used on ${y}.`,{nodes:o}))}}}function ta(e){let t=e[e.length-1];switch("kind"in t||w(!1),t.kind){case c.OPERATION_DEFINITION:return na(t.operation);case c.FIELD:return b.FIELD;case c.FRAGMENT_SPREAD:return b.FRAGMENT_SPREAD;case c.INLINE_FRAGMENT:return b.INLINE_FRAGMENT;case c.FRAGMENT_DEFINITION:return b.FRAGMENT_DEFINITION;case c.VARIABLE_DEFINITION:return b.VARIABLE_DEFINITION;case c.SCHEMA_DEFINITION:case c.SCHEMA_EXTENSION:return b.SCHEMA;case c.SCALAR_TYPE_DEFINITION:case c.SCALAR_TYPE_EXTENSION:return b.SCALAR;case c.OBJECT_TYPE_DEFINITION:case c.OBJECT_TYPE_EXTENSION:return b.OBJECT;case c.FIELD_DEFINITION:return b.FIELD_DEFINITION;case c.INTERFACE_TYPE_DEFINITION:case c.INTERFACE_TYPE_EXTENSION:return b.INTERFACE;case c.UNION_TYPE_DEFINITION:case c.UNION_TYPE_EXTENSION:return b.UNION;case c.ENUM_TYPE_DEFINITION:case c.ENUM_TYPE_EXTENSION:return b.ENUM;case c.ENUM_VALUE_DEFINITION:return b.ENUM_VALUE;case c.INPUT_OBJECT_TYPE_DEFINITION:case c.INPUT_OBJECT_TYPE_EXTENSION:return b.INPUT_OBJECT;case c.INPUT_VALUE_DEFINITION:{let n=e[e.length-3];return"kind"in n||w(!1),n.kind===c.INPUT_OBJECT_TYPE_DEFINITION?b.INPUT_FIELD_DEFINITION:b.ARGUMENT_DEFINITION}default:w(!1,"Unexpected kind: "+m(t.kind))}}function na(e){switch(e){case B.QUERY:return b.QUERY;case B.MUTATION:return b.MUTATION;case B.SUBSCRIPTION:return b.SUBSCRIPTION}}function Xn(e){return{FragmentSpread(t){let n=t.name.value;e.getFragment(n)||e.reportError(new f(`Unknown fragment "${n}".`,{nodes:t.name}))}}}function cn(e){let t=e.getSchema(),n=t?t.getTypeMap():Object.create(null),r=Object.create(null);for(let o of e.getDocument().definitions)Ce(o)&&(r[o.name.value]=!0);let i=[...Object.keys(n),...Object.keys(r)];return{NamedType(o,s,a,p,u){let l=o.name.value;if(!n[l]&&!r[l]){let h=u[2]??a,y=h!=null&&ra(h);if(y&&ho.includes(l))return;let N=le(l,y?ho.concat(i):i);e.reportError(new f(`Unknown type "${l}".`+ie(N),{nodes:o}))}}}}var ho=[...Qe,...Be].map(e=>e.name);function ra(e){return"kind"in e&&(on(e)||sn(e))}function zn(e){let t=0;return{Document(n){t=n.definitions.filter(r=>r.kind===c.OPERATION_DEFINITION).length},OperationDefinition(n){!n.name&&t>1&&e.reportError(new f("This anonymous operation must be the only defined operation.",{nodes:n}))}}}function Hn(e){let t=e.getSchema(),n=t?.astNode??t?.getQueryType()??t?.getMutationType()??t?.getSubscriptionType(),r=0;return{SchemaDefinition(i){if(n){e.reportError(new f("Cannot define a new schema within a schema extension.",{nodes:i}));return}r>0&&e.reportError(new f("Must provide only one schema definition.",{nodes:i})),++r}}}function Wn(e){let t=Object.create(null),n=[],r=Object.create(null);return{OperationDefinition:()=>!1,FragmentDefinition(o){return i(o),!1}};function i(o){if(t[o.name.value])return;let s=o.name.value;t[s]=!0;let a=e.getFragmentSpreads(o.selectionSet);if(a.length!==0){r[s]=n.length;for(let p of a){let u=p.name.value,l=r[u];if(n.push(p),l===void 0){let h=e.getFragment(u);h&&i(h)}else{let h=n.slice(l),y=h.slice(0,-1).map(N=>'"'+N.name.value+'"').join(", ");e.reportError(new f(`Cannot spread fragment "${u}" within itself`+(y!==""?` via ${y}.`:"."),{nodes:h}))}n.pop()}r[s]=void 0}}}function Zn(e){let t=Object.create(null);return{OperationDefinition:{enter(){t=Object.create(null)},leave(n){let r=e.getRecursiveVariableUsages(n);for(let{node:i}of r){let o=i.name.value;t[o]!==!0&&e.reportError(new f(n.name?`Variable "$${o}" is not defined by operation "${n.name.value}".`:`Variable "$${o}" is not defined.`,{nodes:[i,n]}))}}},VariableDefinition(n){t[n.variable.name.value]=!0}}}function er(e){let t=[],n=[];return{OperationDefinition(r){return t.push(r),!1},FragmentDefinition(r){return n.push(r),!1},Document:{leave(){let r=Object.create(null);for(let i of t)for(let o of e.getRecursivelyReferencedFragments(i))r[o.name.value]=!0;for(let i of n){let o=i.name.value;r[o]!==!0&&e.reportError(new f(`Fragment "${o}" is never used.`,{nodes:i}))}}}}}function tr(e){let t=[];return{OperationDefinition:{enter(){t=[]},leave(n){let r=Object.create(null),i=e.getRecursiveVariableUsages(n);for(let{node:o}of i)r[o.name.value]=!0;for(let o of t){let s=o.variable.name.value;r[s]!==!0&&e.reportError(new f(n.name?`Variable "$${s}" is never used in operation "${n.name.value}".`:`Variable "$${s}" is never used.`,{nodes:o}))}}},VariableDefinition(n){t.push(n)}}}function $t(e){switch(e.kind){case c.OBJECT:return{...e,fields:ia(e.fields)};case c.LIST:return{...e,values:e.values.map($t)};case c.INT:case c.FLOAT:case c.STRING:case c.BOOLEAN:case c.NULL:case c.ENUM:case c.VARIABLE:return e}}function ia(e){return e.map(t=>({...t,value:$t(t.value)})).sort((t,n)=>Ge(t.name.value,n.name.value))}function yo(e){return Array.isArray(e)?e.map(([t,n])=>`subfields "${t}" conflict because `+yo(n)).join(" and "):e}function or(e){let t=new ti,n=new Map;return{SelectionSet(r){let i=oa(e,n,t,e.getParentType(),r);for(let[[o,s],a,p]of i){let u=yo(s);e.reportError(new f(`Fields "${o}" conflict because ${u}. Use different aliases on the fields to fetch both if this was intentional.`,{nodes:a.concat(p)}))}}}}function oa(e,t,n,r,i){let o=[],[s,a]=ir(e,t,r,i);if(aa(e,o,t,n,s),a.length!==0)for(let p=0;p<a.length;p++){nr(e,o,t,n,!1,s,a[p]);for(let u=p+1;u<a.length;u++)rr(e,o,t,n,!1,a[p],a[u])}return o}function nr(e,t,n,r,i,o,s){let a=e.getFragment(s);if(!a)return;let[p,u]=ei(e,n,a);if(o!==p){ni(e,t,n,r,i,o,p);for(let l of u)r.has(l,s,i)||(r.add(l,s,i),nr(e,t,n,r,i,o,l))}}function rr(e,t,n,r,i,o,s){if(o===s||r.has(o,s,i))return;r.add(o,s,i);let a=e.getFragment(o),p=e.getFragment(s);if(!a||!p)return;let[u,l]=ei(e,n,a),[h,y]=ei(e,n,p);ni(e,t,n,r,i,u,h);for(let N of y)rr(e,t,n,r,i,o,N);for(let N of l)rr(e,t,n,r,i,N,s)}function sa(e,t,n,r,i,o,s,a){let p=[],[u,l]=ir(e,t,i,o),[h,y]=ir(e,t,s,a);ni(e,p,t,n,r,u,h);for(let N of y)nr(e,p,t,n,r,u,N);for(let N of l)nr(e,p,t,n,r,h,N);for(let N of l)for(let _ of y)rr(e,p,t,n,r,N,_);return p}function aa(e,t,n,r,i){for(let[o,s]of Object.entries(i))if(s.length>1)for(let a=0;a<s.length;a++)for(let p=a+1;p<s.length;p++){let u=Eo(e,n,r,!1,o,s[a],s[p]);u&&t.push(u)}}function ni(e,t,n,r,i,o,s){for(let[a,p]of Object.entries(o)){let u=s[a];if(u)for(let l of p)for(let h of u){let y=Eo(e,n,r,i,a,l,h);y&&t.push(y)}}}function Eo(e,t,n,r,i,o,s){let[a,p,u]=o,[l,h,y]=s,N=r||a!==l&&A(a)&&A(l);if(!N){let be=p.name.value,Me=h.name.value;if(be!==Me)return[[i,`"${be}" and "${Me}" are different fields`],[p],[h]];if(To(p)!==To(h))return[[i,"they have differing arguments"],[p],[h]]}let _=u?.type,X=y?.type;if(_&&X&&Zr(_,X))return[[i,`they return conflicting types "${m(_)}" and "${m(X)}"`],[p],[h]];let P=p.selectionSet,Te=h.selectionSet;if(P&&Te){let be=sa(e,t,n,N,q(_),P,q(X),Te);return ca(be,i,p,h)}}function To(e){let t=e.arguments??[],n={kind:c.OBJECT,fields:t.map(r=>({kind:c.OBJECT_FIELD,name:r.name,value:r.value}))};return k($t(n))}function Zr(e,t){return F(e)?F(t)?Zr(e.ofType,t.ofType):!0:F(t)?!0:v(e)?v(t)?Zr(e.ofType,t.ofType):!0:v(t)?!0:te(e)||te(t)?e!==t:!1}function ir(e,t,n,r){let i=t.get(r);if(i)return i;let o=Object.create(null),s=Object.create(null);No(e,n,r,o,s);let a=[o,Object.keys(s)];return t.set(r,a),a}function ei(e,t,n){let r=t.get(n.selectionSet);if(r)return r;let i=Y(e.getSchema(),n.typeCondition);return ir(e,t,i,n.selectionSet)}function No(e,t,n,r,i){for(let o of n.selections)switch(o.kind){case c.FIELD:{let s=o.name.value,a;(A(t)||x(t))&&(a=t.getFields()[s]);let p=o.alias?o.alias.value:s;r[p]||(r[p]=[]),r[p].push([t,o,a]);break}case c.FRAGMENT_SPREAD:i[o.name.value]=!0;break;case c.INLINE_FRAGMENT:{let s=o.typeCondition,a=s?Y(e.getSchema(),s):t;No(e,a,o.selectionSet,r,i);break}}}function ca(e,t,n,r){if(e.length>0)return[[t,e.map(([i])=>i)],[n,...e.map(([,i])=>i).flat()],[r,...e.map(([,,i])=>i).flat()]]}var ti=class{constructor(){this._data=new Map}has(t,n,r){let[i,o]=t<n?[t,n]:[n,t],s=this._data.get(i)?.get(o);return s===void 0?!1:r?!0:r===s}add(t,n,r){let[i,o]=t<n?[t,n]:[n,t],s=this._data.get(i);s===void 0?this._data.set(i,new Map([[o,r]])):s.set(o,r)}};function sr(e){return{InlineFragment(t){let n=e.getType(),r=e.getParentType();if(ye(n)&&ye(r)&&!qt(e.getSchema(),n,r)){let i=m(r),o=m(n);e.reportError(new f(`Fragment cannot be spread here as objects of type "${i}" can never be of type "${o}".`,{nodes:t}))}},FragmentSpread(t){let n=t.name.value,r=pa(e,n),i=e.getParentType();if(r&&i&&!qt(e.getSchema(),r,i)){let o=m(i),s=m(r);e.reportError(new f(`Fragment "${n}" cannot be spread here as objects of type "${o}" can never be of type "${s}".`,{nodes:t}))}}}}function pa(e,t){let n=e.getFragment(t);if(n){let r=Y(e.getSchema(),n.typeCondition);if(ye(r))return r}}function ar(e){let t=e.getSchema(),n=Object.create(null);for(let i of e.getDocument().definitions)Ce(i)&&(n[i.name.value]=i);return{ScalarTypeExtension:r,ObjectTypeExtension:r,InterfaceTypeExtension:r,UnionTypeExtension:r,EnumTypeExtension:r,InputObjectTypeExtension:r};function r(i){let o=i.name.value,s=n[o],a=t?.getType(o),p;if(s?p=ua[s.kind]:a&&(p=la(a)),p){if(p!==i.kind){let u=fa(i.kind);e.reportError(new f(`Cannot extend non-${u} type "${o}".`,{nodes:s?[s,i]:i}))}}else{let u=Object.keys({...n,...t?.getTypeMap()}),l=le(o,u);e.reportError(new f(`Cannot extend type "${o}" because it is not defined.`+ie(l),{nodes:i.name}))}}}var ua={[c.SCALAR_TYPE_DEFINITION]:c.SCALAR_TYPE_EXTENSION,[c.OBJECT_TYPE_DEFINITION]:c.OBJECT_TYPE_EXTENSION,[c.INTERFACE_TYPE_DEFINITION]:c.INTERFACE_TYPE_EXTENSION,[c.UNION_TYPE_DEFINITION]:c.UNION_TYPE_EXTENSION,[c.ENUM_TYPE_DEFINITION]:c.ENUM_TYPE_EXTENSION,[c.INPUT_OBJECT_TYPE_DEFINITION]:c.INPUT_OBJECT_TYPE_EXTENSION};function la(e){if(W(e))return c.SCALAR_TYPE_EXTENSION;if(A(e))return c.OBJECT_TYPE_EXTENSION;if(x(e))return c.INTERFACE_TYPE_EXTENSION;if(M(e))return c.UNION_TYPE_EXTENSION;if(C(e))return c.ENUM_TYPE_EXTENSION;if(L(e))return c.INPUT_OBJECT_TYPE_EXTENSION;w(!1,"Unexpected type: "+m(e))}function fa(e){switch(e){case c.SCALAR_TYPE_EXTENSION:return"scalar";case c.OBJECT_TYPE_EXTENSION:return"object";case c.INTERFACE_TYPE_EXTENSION:return"interface";case c.UNION_TYPE_EXTENSION:return"union";case c.ENUM_TYPE_EXTENSION:return"enum";case c.INPUT_OBJECT_TYPE_EXTENSION:return"input object";default:w(!1,"Unexpected kind: "+m(e))}}function cr(e){return{...ri(e),Field:{leave(t){let n=e.getFieldDef();if(!n)return!1;let r=new Set(t.arguments?.map(i=>i.name.value));for(let i of n.args)if(!r.has(i.name)&&Re(i)){let o=m(i.type);e.reportError(new f(`Field "${n.name}" argument "${i.name}" of type "${o}" is required, but it was not provided.`,{nodes:t}))}}}}}function ri(e){let t=Object.create(null),r=e.getSchema()?.getDirectives()??he;for(let o of r)t[o.name]=oe(o.args.filter(Re),s=>s.name);let i=e.getDocument().definitions;for(let o of i)if(o.kind===c.DIRECTIVE_DEFINITION){let s=o.arguments??[];t[o.name.value]=oe(s.filter(ma),a=>a.name.value)}return{Directive:{leave(o){let s=o.name.value,a=t[s];if(a){let p=o.arguments??[],u=new Set(p.map(l=>l.name.value));for(let[l,h]of Object.entries(a))if(!u.has(l)){let y=lt(h.type)?m(h.type):k(h.type);e.reportError(new f(`Directive "@${s}" argument "${l}" of type "${y}" is required, but it was not provided.`,{nodes:o}))}}}}}}function ma(e){return e.type.kind===c.NON_NULL_TYPE&&e.defaultValue==null}function pr(e){return{Field(t){let n=e.getType(),r=t.selectionSet;if(n){if(te(q(n))){if(r){let i=t.name.value,o=m(n);e.reportError(new f(`Field "${i}" must not have a selection since type "${o}" has no subfields.`,{nodes:r}))}}else if(!r){let i=t.name.value,o=m(n);e.reportError(new f(`Field "${i}" of type "${o}" must have a selection of subfields. Did you mean "${i} { ... }"?`,{nodes:t}))}}}}}function ur(e){return e.map(t=>typeof t=="number"?"["+t.toString()+"]":"."+t).join("")}function qe(e,t,n){return{prev:e,key:t,typename:n}}function ne(e){let t=[],n=e;for(;n;)t.push(n.key),n=n.prev;return t.reverse()}function lr(e,t,n=da){return pn(e,t,n,void 0)}function da(e,t,n){let r="Invalid value "+m(t);throw e.length>0&&(r+=` at "value${ur(e)}"`),n.message=r+": "+n.message,n}function pn(e,t,n,r){if(v(t)){if(e!=null)return pn(e,t.ofType,n,r);n(ne(r),e,new f(`Expected non-nullable type "${m(t)}" not to be null.`));return}if(e==null)return null;if(F(t)){let i=t.ofType;return xt(e)?Array.from(e,(o,s)=>{let a=qe(r,s,void 0);return pn(o,i,n,a)}):[pn(e,i,n,r)]}if(L(t)){if(!K(e)){n(ne(r),e,new f(`Expected type "${t.name}" to be an object.`));return}let i={},o=t.getFields();for(let s of Object.values(o)){let a=e[s.name];if(a===void 0){if(s.defaultValue!==void 0)i[s.name]=s.defaultValue;else if(v(s.type)){let p=m(s.type);n(ne(r),e,new f(`Field "${s.name}" of required type "${p}" was not provided.`))}continue}i[s.name]=pn(a,s.type,n,qe(r,s.name,t.name))}for(let s of Object.keys(e))if(!o[s]){let a=le(s,Object.keys(t.getFields()));n(ne(r),e,new f(`Field "${s}" is not defined by type "${t.name}".`+ie(a)))}return i}if(te(t)){let i;try{i=t.parseValue(e)}catch(o){o instanceof f?n(ne(r),e,o):n(ne(r),e,new f(`Expected type "${t.name}". `+o.message,{originalError:o}));return}return i===void 0&&n(ne(r),e,new f(`Expected type "${t.name}".`)),i}w(!1,"Unexpected input type: "+m(t))}function Ee(e,t,n){if(!!e){if(e.kind===c.VARIABLE){let r=e.name.value;if(n==null||n[r]===void 0)return;let i=n[r];return i===null&&v(t)?void 0:i}if(v(t))return e.kind===c.NULL?void 0:Ee(e,t.ofType,n);if(e.kind===c.NULL)return null;if(F(t)){let r=t.ofType;if(e.kind===c.LIST){let o=[];for(let s of e.values)if(go(s,n)){if(v(r))return;o.push(null)}else{let a=Ee(s,r,n);if(a===void 0)return;o.push(a)}return o}let i=Ee(e,r,n);return i===void 0?void 0:[i]}if(L(t)){if(e.kind!==c.OBJECT)return;let r=Object.create(null),i=oe(e.fields,o=>o.name.value);for(let o of Object.values(t.getFields())){let s=i[o.name];if(!s||go(s.value,n)){if(o.defaultValue!==void 0)r[o.name]=o.defaultValue;else if(v(o.type))return;continue}let a=Ee(s.value,o.type,n);if(a===void 0)return;r[o.name]=a}return r}if(te(t)){let r;try{r=t.parseLiteral(e,n)}catch{return}return r===void 0?void 0:r}w(!1,"Unexpected input type: "+m(t))}}function go(e,t){return e.kind===c.VARIABLE&&(t==null||t[e.name.value]===void 0)}function fr(e,t,n,r){let i=[],o=r?.maxErrors;try{let s=ha(e,t,n,a=>{if(o!=null&&i.length>=o)throw new f("Too many errors processing variables, error limit reached. Execution aborted.");i.push(a)});if(i.length===0)return{coerced:s}}catch(s){i.push(s)}return{errors:i}}function ha(e,t,n,r){let i={};for(let o of t){let s=o.variable.name.value,a=Y(e,o.type);if(!Z(a)){let u=k(o.type);r(new f(`Variable "$${s}" expected value of type "${u}" which cannot be used as an input type.`,{nodes:o.type}));continue}if(!Io(n,s)){if(o.defaultValue)i[s]=Ee(o.defaultValue,a);else if(v(a)){let u=m(a);r(new f(`Variable "$${s}" of required type "${u}" was not provided.`,{nodes:o}))}continue}let p=n[s];if(p===null&&v(a)){let u=m(a);r(new f(`Variable "$${s}" of non-null type "${u}" must not be null.`,{nodes:o}));continue}i[s]=lr(p,a,(u,l,h)=>{let y=`Variable "$${s}" got invalid value `+m(l);u.length>0&&(y+=` at "${s}${ur(u)}"`),r(new f(y+"; "+h.message,{nodes:o,originalError:h.originalError}))})}return i}function Tt(e,t,n){let r={},i=t.arguments??[],o=oe(i,s=>s.name.value);for(let s of e.args){let a=s.name,p=s.type,u=o[a];if(!u){if(s.defaultValue!==void 0)r[a]=s.defaultValue;else if(v(p))throw new f(`Argument "${a}" of required type "${m(p)}" was not provided.`,{nodes:t});continue}let l=u.value,h=l.kind===c.NULL;if(l.kind===c.VARIABLE){let N=l.name.value;if(n==null||!Io(n,N)){if(s.defaultValue!==void 0)r[a]=s.defaultValue;else if(v(p))throw new f(`Argument "${a}" of required type "${m(p)}" was provided the variable "$${N}" which was not provided a runtime value.`,{nodes:l});continue}h=n[N]==null}if(h&&v(p))throw new f(`Argument "${a}" of non-null type "${m(p)}" must not be null.`,{nodes:l});let y=Ee(l,p,n);if(y===void 0)throw new f(`Argument "${a}" has invalid value ${k(l)}.`,{nodes:l});r[a]=y}return r}function it(e,t,n){let r=t.directives?.find(i=>i.name.value===e.name);if(r)return Tt(e,r,n)}function Io(e,t){return Object.prototype.hasOwnProperty.call(e,t)}function Ct(e,t,n,r,i){let o=new Pe;return mr(e,t,n,r,i,o,new Set),o}function bo(e,t,n,r,i){let o=new Pe,s=new Set;for(let a of i)a.selectionSet&&mr(e,t,n,r,a.selectionSet,o,s);return o}function mr(e,t,n,r,i,o,s){for(let a of i.selections)switch(a.kind){case c.FIELD:{if(!ii(n,a))continue;o.add(Ta(a),a);break}case c.INLINE_FRAGMENT:{if(!ii(n,a)||!vo(e,a,r))continue;mr(e,t,n,r,a.selectionSet,o,s);break}case c.FRAGMENT_SPREAD:{let p=a.name.value;if(s.has(p)||!ii(n,a))continue;s.add(p);let u=t[p];if(!u||!vo(e,u,r))continue;mr(e,t,n,r,u.selectionSet,o,s);break}}}function ii(e,t){return!(it(Ht,t,e)?.if===!0||it(zt,t,e)?.if===!1)}function vo(e,t,n){let r=t.typeCondition;if(!r)return!0;let i=Y(e,r);return i===n?!0:ae(i)?e.isSubType(i,n):!1}function Ta(e){return e.alias?e.alias.value:e.name.value}function dr(e){return{OperationDefinition(t){if(t.operation==="subscription"){let n=e.getSchema(),r=n.getSubscriptionType();if(r){let i=t.name?t.name.value:null,o=Object.create(null),s=e.getDocument(),a=Object.create(null);for(let u of s.definitions)u.kind===c.FRAGMENT_DEFINITION&&(a[u.name.value]=u);let p=Ct(n,a,o,r,t.selectionSet);if(p.size>1){let h=[...p.values()].slice(1).flat();e.reportError(new f(i!=null?`Subscription "${i}" must select only one top level field.`:"Anonymous Subscription must select only one top level field.",{nodes:h}))}for(let u of p.values())u[0].name.value.startsWith("__")&&e.reportError(new f(i!=null?`Subscription "${i}" must not select an introspection top level field.`:"Anonymous Subscription must not select an introspection top level field.",{nodes:u}))}}}}}function Ut(e,t){let n=new Pe;for(let r of e)n.add(t(r),r);return n}function hr(e){return{DirectiveDefinition(r){let i=r.arguments??[];return n(`@${r.name.value}`,i)},InterfaceTypeDefinition:t,InterfaceTypeExtension:t,ObjectTypeDefinition:t,ObjectTypeExtension:t};function t(r){let i=r.name.value,o=r.fields??[];for(let s of o){let a=s.name.value,p=s.arguments??[];n(`${i}.${a}`,p)}return!1}function n(r,i){let o=Ut(i,s=>s.name.value);for(let[s,a]of o)a.length>1&&e.reportError(new f(`Argument "${r}(${s}:)" can only be defined once.`,{nodes:a.map(p=>p.name)}));return!1}}function un(e){return{Field:t,Directive:t};function t(n){let r=n.arguments??[],i=Ut(r,o=>o.name.value);for(let[o,s]of i)s.length>1&&e.reportError(new f(`There can be only one argument named "${o}".`,{nodes:s.map(a=>a.name)}))}}function Tr(e){let t=Object.create(null),n=e.getSchema();return{DirectiveDefinition(r){let i=r.name.value;if(n?.getDirective(i)){e.reportError(new f(`Directive "@${i}" already exists in the schema. It cannot be redefined.`,{nodes:r.name}));return}return t[i]?e.reportError(new f(`There can be only one directive named "@${i}".`,{nodes:[t[i],r.name]})):t[i]=r.name,!1}}}function ln(e){let t=Object.create(null),n=e.getSchema(),r=n?n.getDirectives():he;for(let a of r)t[a.name]=!a.isRepeatable;let i=e.getDocument().definitions;for(let a of i)a.kind===c.DIRECTIVE_DEFINITION&&(t[a.name.value]=!a.repeatable);let o=Object.create(null),s=Object.create(null);return{enter(a){if(!("directives"in a)||!a.directives)return;let p;if(a.kind===c.SCHEMA_DEFINITION||a.kind===c.SCHEMA_EXTENSION)p=o;else if(Ce(a)||ht(a)){let u=a.name.value;p=s[u],p===void 0&&(s[u]=p=Object.create(null))}else p=Object.create(null);for(let u of a.directives){let l=u.name.value;t[l]&&(p[l]?e.reportError(new f(`The directive "@${l}" can only be used once at this location.`,{nodes:[p[l],u]})):p[l]=u)}}}}function yr(e){let t=e.getSchema(),n=t?t.getTypeMap():Object.create(null),r=Object.create(null);return{EnumTypeDefinition:i,EnumTypeExtension:i};function i(o){let s=o.name.value;r[s]||(r[s]=Object.create(null));let a=o.values??[],p=r[s];for(let u of a){let l=u.name.value,h=n[s];C(h)&&h.getValue(l)?e.reportError(new f(`Enum value "${s}.${l}" already exists in the schema. It cannot also be defined in this type extension.`,{nodes:u.name})):p[l]?e.reportError(new f(`Enum value "${s}.${l}" can only be defined once.`,{nodes:[p[l],u.name]})):p[l]=u.name}return!1}}function Er(e){let t=e.getSchema(),n=t?t.getTypeMap():Object.create(null),r=Object.create(null);return{InputObjectTypeDefinition:i,InputObjectTypeExtension:i,InterfaceTypeDefinition:i,InterfaceTypeExtension:i,ObjectTypeDefinition:i,ObjectTypeExtension:i};function i(o){let s=o.name.value;r[s]||(r[s]=Object.create(null));let a=o.fields??[],p=r[s];for(let u of a){let l=u.name.value;ya(n[s],l)?e.reportError(new f(`Field "${s}.${l}" already exists in the schema. It cannot also be defined in this type extension.`,{nodes:u.name})):p[l]?e.reportError(new f(`Field "${s}.${l}" can only be defined once.`,{nodes:[p[l],u.name]})):p[l]=u.name}return!1}}function ya(e,t){return A(e)||x(e)||L(e)?e.getFields()[t]!=null:!1}function Nr(e){let t=Object.create(null);return{OperationDefinition:()=>!1,FragmentDefinition(n){let r=n.name.value;return t[r]?e.reportError(new f(`There can be only one fragment named "${r}".`,{nodes:[t[r],n.name]})):t[r]=n.name,!1}}}function fn(e){let t=[],n=Object.create(null);return{ObjectValue:{enter(){t.push(n),n=Object.create(null)},leave(){let r=t.pop();r!=null||w(!1),n=r}},ObjectField(r){let i=r.name.value;n[i]?e.reportError(new f(`There can be only one input field named "${i}".`,{nodes:[n[i],r.name]})):n[i]=r.name}}}function gr(e){let t=Object.create(null);return{OperationDefinition(n){let r=n.name;return r&&(t[r.value]?e.reportError(new f(`There can be only one operation named "${r.value}".`,{nodes:[t[r.value],r]})):t[r.value]=r),!1},FragmentDefinition:()=>!1}}function Ir(e){let t=e.getSchema(),n=Object.create(null),r=t?{query:t.getQueryType(),mutation:t.getMutationType(),subscription:t.getSubscriptionType()}:{};return{SchemaDefinition:i,SchemaExtension:i};function i(o){let s=o.operationTypes??[];for(let a of s){let p=a.operation,u=n[p];r[p]?e.reportError(new f(`Type for ${p} already defined in the schema. It cannot be redefined.`,{nodes:a})):u?e.reportError(new f(`There can be only one ${p} type in schema.`,{nodes:[u,a]})):n[p]=a}return!1}}function vr(e){let t=Object.create(null),n=e.getSchema();return{ScalarTypeDefinition:r,ObjectTypeDefinition:r,InterfaceTypeDefinition:r,UnionTypeDefinition:r,EnumTypeDefinition:r,InputObjectTypeDefinition:r};function r(i){let o=i.name.value;if(n?.getType(o)){e.reportError(new f(`Type "${o}" already exists in the schema. It cannot also be defined in this type definition.`,{nodes:i.name}));return}return t[o]?e.reportError(new f(`There can be only one type named "${o}".`,{nodes:[t[o],i.name]})):t[o]=i.name,!1}}function br(e){return{OperationDefinition(t){let n=t.variableDefinitions??[],r=Ut(n,i=>i.variable.name.value);for(let[i,o]of r)o.length>1&&e.reportError(new f(`There can be only one variable named "$${i}".`,{nodes:o.map(s=>s.variable.name)}))}}}function _r(e){return{ListValue(t){let n=At(e.getParentInputType());if(!F(n))return yt(e,t),!1},ObjectValue(t){let n=q(e.getInputType());if(!L(n))return yt(e,t),!1;let r=oe(t.fields,i=>i.name.value);for(let i of Object.values(n.getFields()))if(!r[i.name]&&We(i)){let s=m(i.type);e.reportError(new f(`Field "${n.name}.${i.name}" of required type "${s}" was not provided.`,{nodes:t}))}},ObjectField(t){let n=q(e.getParentInputType());if(!e.getInputType()&&L(n)){let i=le(t.name.value,Object.keys(n.getFields()));e.reportError(new f(`Field "${t.name.value}" is not defined by type "${n.name}".`+ie(i),{nodes:t}))}},NullValue(t){let n=e.getInputType();v(n)&&e.reportError(new f(`Expected value of type "${m(n)}", found ${k(t)}.`,{nodes:t}))},EnumValue:t=>yt(e,t),IntValue:t=>yt(e,t),FloatValue:t=>yt(e,t),StringValue:t=>yt(e,t),BooleanValue:t=>yt(e,t)}}function yt(e,t){let n=e.getInputType();if(!n)return;let r=q(n);if(!te(r)){let i=m(n);e.reportError(new f(`Expected value of type "${i}", found ${k(t)}.`,{nodes:t}));return}try{if(r.parseLiteral(t,void 0)===void 0){let o=m(n);e.reportError(new f(`Expected value of type "${o}", found ${k(t)}.`,{nodes:t}))}}catch(i){let o=m(n);i instanceof f?e.reportError(i):e.reportError(new f(`Expected value of type "${o}", found ${k(t)}; `+i.message,{nodes:t,originalError:i}))}}function Or(e){return{VariableDefinition(t){let n=Y(e.getSchema(),t.type);if(n!==void 0&&!Z(n)){let r=t.variable.name.value,i=k(t.type);e.reportError(new f(`Variable "$${r}" cannot be non-input type "${i}".`,{nodes:t.type}))}}}}function Dr(e){let t=Object.create(null);return{OperationDefinition:{enter(){t=Object.create(null)},leave(n){let r=e.getRecursiveVariableUsages(n);for(let{node:i,type:o,defaultValue:s}of r){let a=i.name.value,p=t[a];if(p&&o){let u=e.getSchema(),l=Y(u,p.type);if(l&&!Ea(u,l,p.defaultValue,o,s)){let h=m(l),y=m(o);e.reportError(new f(`Variable "$${a}" of type "${h}" used in position expecting type "${y}".`,{nodes:[p,i]}))}}}}},VariableDefinition(n){t[n.variable.name.value]=n}}}function Ea(e,t,n,r,i){if(v(r)&&!v(t)){if(!(n!=null&&n.kind!==c.NULL)&&!(i!==void 0))return!1;let a=r.ofType;return Ue(e,t,a)}return Ue(e,t,r)}var Sr=Object.freeze([qn,gr,zn,dr,cn,Jn,Or,pr,Yn,Nr,Xn,er,sr,Wn,br,Zn,tr,an,ln,Kn,un,_r,cr,Dr,or,fn]),_o=Object.freeze([Hn,Ir,vr,yr,Er,hr,Tr,cn,an,ln,ar,Wr,un,fn,ri]);var Ar=class{constructor(t,n){this._ast=t,this._fragments=void 0,this._fragmentSpreads=new Map,this._recursivelyReferencedFragments=new Map,this._onError=n}get[Symbol.toStringTag](){return"ASTValidationContext"}reportError(t){this._onError(t)}getDocument(){return this._ast}getFragment(t){let n;if(this._fragments)n=this._fragments;else{n=Object.create(null);for(let r of this.getDocument().definitions)r.kind===c.FRAGMENT_DEFINITION&&(n[r.name.value]=r);this._fragments=n}return n[t]}getFragmentSpreads(t){let n=this._fragmentSpreads.get(t);if(!n){n=[];let r=[t],i;for(;i=r.pop();)for(let o of i.selections)o.kind===c.FRAGMENT_SPREAD?n.push(o):o.selectionSet&&r.push(o.selectionSet);this._fragmentSpreads.set(t,n)}return n}getRecursivelyReferencedFragments(t){let n=this._recursivelyReferencedFragments.get(t);if(!n){n=[];let r=Object.create(null),i=[t.selectionSet],o;for(;o=i.pop();)for(let s of this.getFragmentSpreads(o)){let a=s.name.value;if(r[a]!==!0){r[a]=!0;let p=this.getFragment(a);p&&(n.push(p),i.push(p.selectionSet))}}this._recursivelyReferencedFragments.set(t,n)}return n}},Rr=class extends Ar{constructor(t,n,r){super(t,r),this._schema=n}get[Symbol.toStringTag](){return"SDLValidationContext"}getSchema(){return this._schema}},Mt=class extends Ar{constructor(t,n,r,i){super(n,i),this._schema=t,this._typeInfo=r,this._variableUsages=new Map,this._recursiveVariableUsages=new Map}get[Symbol.toStringTag](){return"ValidationContext"}getSchema(){return this._schema}getVariableUsages(t){let n=this._variableUsages.get(t);if(!n){let r=[],i=new rt(this._schema);ke(t,Vt(i,{VariableDefinition:()=>!1,Variable(o){r.push({node:o,type:i.getInputType(),defaultValue:i.getDefaultValue()})}})),n=r,this._variableUsages.set(t,n)}return n}getRecursiveVariableUsages(t){let n=this._recursiveVariableUsages.get(t);if(!n){n=this.getVariableUsages(t);for(let r of this.getRecursivelyReferencedFragments(t))n=n.concat(this.getVariableUsages(r));this._recursiveVariableUsages.set(t,n)}return n}getType(){return this._typeInfo.getType()}getParentType(){return this._typeInfo.getParentType()}getInputType(){return this._typeInfo.getInputType()}getParentInputType(){return this._typeInfo.getParentInputType()}getFieldDef(){return this._typeInfo.getFieldDef()}getDirective(){return this._typeInfo.getDirective()}getArgument(){return this._typeInfo.getArgument()}getEnumValue(){return this._typeInfo.getEnumValue()}};function xr(e,t,n=Sr,r,i=new rt(e)){let o=r?.maxErrors??100;t!=null||S(!1,"Must provide document."),kt(e);let s=Object.freeze({}),a=[],p=new Mt(e,t,i,l=>{if(a.length>=o)throw a.push(new f("Too many validation errors, error limit reached. Validation aborted.")),s;a.push(l)}),u=Bt(n.map(l=>l(p)));try{ke(t,Vt(i,u))}catch(l){if(l!==s)throw l}return a}function Oo(e,t,n=_o){let r=[],i=new Rr(e,t,s=>{r.push(s)}),o=n.map(s=>s(i));return ke(e,Bt(o)),r}function Do(e){let t=Oo(e);if(t.length!==0)throw new Error(t.map(n=>n.message).join(`

`))}function So(e,t){let n=Oo(e,t);if(n.length!==0)throw new Error(n.map(r=>r.message).join(`

`))}function Ao(e){let t;return function(r,i,o){t===void 0&&(t=new WeakMap);let s=t.get(r);s===void 0&&(s=new WeakMap,t.set(r,s));let a=s.get(i);a===void 0&&(a=new WeakMap,s.set(i,a));let p=a.get(o);return p===void 0&&(p=e(r,i,o),a.set(o,p)),p}}function Ro(e){return Promise.all(Object.values(e)).then(t=>{let n=Object.create(null);for(let[r,i]of Object.keys(e).entries())n[i]=t[r];return n})}function xo(e,t,n){let r=n;for(let i of e)r=re(r)?r.then(o=>t(o,i)):t(r,i);return r}function Lo(e){return e instanceof Error?e:new oi(e)}var oi=class extends Error{constructor(t){super("Unexpected error value: "+m(t)),this.name="NonErrorThrown",this.thrownValue=t}};function Ye(e,t,n){let r=Lo(e);return Na(r)?r:new f(r.message,{nodes:r.nodes??t,source:r.source,positions:r.positions,path:n,originalError:r})}function Na(e){return Array.isArray(e.path)}var ga=Ao((e,t,n)=>bo(e.schema,e.fragments,e.variableValues,t,n));function Et(e){let{schema:t,document:n,variableValues:r,rootValue:i}=e;ai(t,n,r);let o=ci(e);if(!("schema"in o))return{errors:o};try{let{operation:s}=o,a=Ia(o,s,i);return re(a)?a.then(p=>Lr(p,o.errors),p=>(o.errors.push(p),Lr(null,o.errors))):Lr(a,o.errors)}catch(s){return o.errors.push(s),Lr(null,o.errors)}}function Vr(e){let t=Et(e);if(re(t))throw new Error("GraphQL execution failed to complete synchronously.");return t}function Lr(e,t){return t.length===0?{data:e}:{errors:t,data:e}}function ai(e,t,n){t!=null||S(!1,"Must provide document."),kt(e),n==null||K(n)||S(!1,"Variables must be provided as an Object where each property is a variable value. Perhaps look to see if an unparsed JSON string was provided.")}function ci(e){let{schema:t,document:n,rootValue:r,contextValue:i,variableValues:o,operationName:s,fieldResolver:a,typeResolver:p,subscribeFieldResolver:u}=e,l,h=Object.create(null);for(let _ of n.definitions)switch(_.kind){case c.OPERATION_DEFINITION:if(s==null){if(l!==void 0)return[new f("Must provide operation name if query contains multiple operations.")];l=_}else _.name?.value===s&&(l=_);break;case c.FRAGMENT_DEFINITION:h[_.name.value]=_;break;default:}if(!l)return s!=null?[new f(`Unknown operation named "${s}".`)]:[new f("Must provide an operation.")];let y=l.variableDefinitions??[],N=fr(t,y,o??{},{maxErrors:50});return N.errors?N.errors:{schema:t,fragments:h,rootValue:r,contextValue:i,operation:l,variableValues:N.coerced,fieldResolver:a??kr,typeResolver:p??ui,subscribeFieldResolver:u??kr,errors:[]}}function Ia(e,t,n){let r=e.schema.getRootType(t.operation);if(r==null)throw new f(`Schema is not configured to execute ${t.operation} operation.`,{nodes:t});let i=Ct(e.schema,e.fragments,e.variableValues,r,t.selectionSet),o=void 0;switch(t.operation){case B.QUERY:return wr(e,r,n,o,i);case B.MUTATION:return va(e,r,n,o,i);case B.SUBSCRIPTION:return wr(e,r,n,o,i)}}function va(e,t,n,r,i){return xo(i.entries(),(o,[s,a])=>{let p=qe(r,s,t.name),u=ko(e,t,n,a,p);return u===void 0?o:re(u)?u.then(l=>(o[s]=l,o)):(o[s]=u,o)},Object.create(null))}function wr(e,t,n,r,i){let o=Object.create(null),s=!1;for(let[a,p]of i.entries()){let u=qe(r,a,t.name),l=ko(e,t,n,p,u);l!==void 0&&(o[a]=l,re(l)&&(s=!0))}return s?Ro(o):o}function ko(e,t,n,r,i){let o=li(e.schema,t,r[0]);if(!o)return;let s=o.type,a=o.resolve??e.fieldResolver,p=pi(e,o,r,t,i);try{let u=Tt(o,r[0],e.variableValues),l=e.contextValue,h=a(n,u,l,p),y;return re(h)?y=h.then(N=>mn(e,s,r,p,i,N)):y=mn(e,s,r,p,i,h),re(y)?y.then(void 0,N=>{let _=Ye(N,r,ne(i));return Fr(_,s,e)}):y}catch(u){let l=Ye(u,r,ne(i));return Fr(l,s,e)}}function pi(e,t,n,r,i){return{fieldName:t.name,fieldNodes:n,returnType:t.type,parentType:r,path:i,schema:e.schema,fragments:e.fragments,rootValue:e.rootValue,operation:e.operation,variableValues:e.variableValues}}function Fr(e,t,n){if(v(t))throw e;return n.errors.push(e),null}function mn(e,t,n,r,i,o){if(o instanceof Error)throw o;if(v(t)){let s=mn(e,t.ofType,n,r,i,o);if(s===null)throw new Error(`Cannot return null for non-nullable field ${r.parentType.name}.${r.fieldName}.`);return s}if(o==null)return null;if(F(t))return ba(e,t,n,r,i,o);if(te(t))return _a(t,o);if(ae(t))return Oa(e,t,n,r,i,o);if(A(t))return si(e,t,n,r,i,o);w(!1,"Cannot complete value of unexpected output type: "+m(t))}function ba(e,t,n,r,i,o){if(!xt(o))throw new f(`Expected Iterable, but did not find one for field "${r.parentType.name}.${r.fieldName}".`);let s=t.ofType,a=!1,p=Array.from(o,(u,l)=>{let h=qe(i,l,void 0);try{let y;return re(u)?y=u.then(N=>mn(e,s,n,r,h,N)):y=mn(e,s,n,r,h,u),re(y)?(a=!0,y.then(void 0,N=>{let _=Ye(N,n,ne(h));return Fr(_,s,e)})):y}catch(y){let N=Ye(y,n,ne(h));return Fr(N,s,e)}});return a?Promise.all(p):p}function _a(e,t){let n=e.serialize(t);if(n==null)throw new Error(`Expected \`${m(e)}.serialize(${m(t)})\` to return non-nullable value, returned: ${m(n)}`);return n}function Oa(e,t,n,r,i,o){let s=t.resolveType??e.typeResolver,a=e.contextValue,p=s(o,a,r,t);return re(p)?p.then(u=>si(e,wo(u,e,t,n,r,o),n,r,i,o)):si(e,wo(p,e,t,n,r,o),n,r,i,o)}function wo(e,t,n,r,i,o){if(e==null)throw new f(`Abstract type "${n.name}" must resolve to an Object type at runtime for field "${i.parentType.name}.${i.fieldName}". Either the "${n.name}" type should provide a "resolveType" function or each possible type should provide an "isTypeOf" function.`,{nodes:r});if(A(e))throw new f("Support for returning GraphQLObjectType from resolveType was removed in graphql-js@16.0.0 please return type name instead.");if(typeof e!="string")throw new f(`Abstract type "${n.name}" must resolve to an Object type at runtime for field "${i.parentType.name}.${i.fieldName}" with value ${m(o)}, received "${m(e)}".`);let s=t.schema.getType(e);if(s==null)throw new f(`Abstract type "${n.name}" was resolved to a type "${e}" that does not exist inside the schema.`,{nodes:r});if(!A(s))throw new f(`Abstract type "${n.name}" was resolved to a non-object type "${e}".`,{nodes:r});if(!t.schema.isSubType(n,s))throw new f(`Runtime Object type "${s.name}" is not a possible type for "${n.name}".`,{nodes:r});return s}function si(e,t,n,r,i,o){let s=ga(e,t,n);if(t.isTypeOf){let a=t.isTypeOf(o,e.contextValue,r);if(re(a))return a.then(p=>{if(!p)throw Fo(t,o,n);return wr(e,t,o,i,s)});if(!a)throw Fo(t,o,n)}return wr(e,t,o,i,s)}function Fo(e,t,n){return new f(`Expected value of type "${e.name}" but got: ${m(t)}.`,{nodes:n})}var ui=function(e,t,n,r){if(K(e)&&typeof e.__typename=="string")return e.__typename;let i=n.schema.getPossibleTypes(r),o=[];for(let s=0;s<i.length;s++){let a=i[s];if(a.isTypeOf){let p=a.isTypeOf(e,t,n);if(re(p))o[s]=p;else if(p)return a.name}}if(o.length)return Promise.all(o).then(s=>{for(let a=0;a<s.length;a++)if(s[a])return i[a].name})},kr=function(e,t,n,r){if(K(e)||typeof e=="function"){let i=e[r.fieldName];return typeof i=="function"?e[r.fieldName](t,n,r):i}};function li(e,t,n){let r=n.name.value;return r===et.name&&e.getQueryType()===t?et:r===tt.name&&e.getQueryType()===t?tt:r===nt.name?nt:t.getFields()[r]}function Da(e){return new Promise(t=>t(Vo(e)))}function Sa(e){let t=Vo(e);if(re(t))throw new Error("GraphQL execution failed to complete synchronously.");return t}function Vo(e){let{schema:t,source:n,rootValue:r,contextValue:i,variableValues:o,operationName:s,fieldResolver:a,typeResolver:p}=e,u=nn(t);if(u.length>0)return{errors:u};let l;try{l=ze(n)}catch(y){return{errors:[y]}}let h=xr(t,l);return h.length>0?{errors:h}:Et({schema:t,document:l,rootValue:r,contextValue:i,variableValues:o,operationName:s,fieldResolver:a,typeResolver:p})}function fi(e){return typeof e?.[Symbol.asyncIterator]=="function"}function $o(e,t){let n=e[Symbol.asyncIterator]();async function r(i){if(i.done)return i;try{return{value:await t(i.value),done:!1}}catch(o){if(typeof n.return=="function")try{await n.return()}catch{}throw o}}return{async next(){return r(await n.next())},async return(){return typeof n.return=="function"?r(await n.return()):{value:void 0,done:!0}},async throw(i){if(typeof n.throw=="function")return r(await n.throw(i));throw i},[Symbol.asyncIterator](){return this}}}async function Co(e){let{schema:t,document:n,rootValue:r,contextValue:i,variableValues:o,operationName:s,fieldResolver:a,subscribeFieldResolver:p}=e,u=await mi(t,n,r,i,o,s,p);return fi(u)?$o(u,h=>Et({schema:t,document:n,rootValue:h,contextValue:i,variableValues:o,operationName:s,fieldResolver:a})):u}async function mi(e,t,n,r,i,o,s){ai(e,t,i);let a=ci({schema:e,document:t,rootValue:n,contextValue:r,variableValues:i,operationName:o,subscribeFieldResolver:s});if(!("schema"in a))return{errors:a};try{let p=await Aa(a);if(!fi(p))throw new Error(`Subscription field must return Async Iterable. Received: ${m(p)}.`);return p}catch(p){if(p instanceof f)return{errors:[p]};throw p}}async function Aa(e){let{schema:t,fragments:n,operation:r,variableValues:i,rootValue:o}=e,s=t.getSubscriptionType();if(s==null)throw new f("Schema is not configured to execute subscription operation.",{nodes:r});let a=Ct(t,n,i,s,r.selectionSet),[p,u]=[...a.entries()][0],l=li(t,s,u[0]);if(!l){let N=u[0].name.value;throw new f(`The subscription field "${N}" is not defined.`,{nodes:u})}let h=qe(void 0,p,s.name),y=pi(e,l,u,s,h);try{let N=Tt(l,u[0],i),_=e.contextValue,P=await(l.subscribe??e.subscribeFieldResolver)(o,N,_,y);if(P instanceof Error)throw P;return P}catch(N){throw Ye(N,u,ne(h))}}function Uo(e){return{Field(t){let n=e.getFieldDef(),r=n?.deprecationReason;if(n&&r!=null){let i=e.getParentType();i!=null||w(!1),e.reportError(new f(`The field ${i.name}.${n.name} is deprecated. ${r}`,{nodes:t}))}},Argument(t){let n=e.getArgument(),r=n?.deprecationReason;if(n&&r!=null){let i=e.getDirective();if(i!=null)e.reportError(new f(`Directive "@${i.name}" argument "${n.name}" is deprecated. ${r}`,{nodes:t}));else{let o=e.getParentType(),s=e.getFieldDef();o!=null&&s!=null||w(!1),e.reportError(new f(`Field "${o.name}.${s.name}" argument "${n.name}" is deprecated. ${r}`,{nodes:t}))}}},ObjectField(t){let n=q(e.getParentInputType());if(L(n)){let r=n.getFields()[t.name.value],i=r?.deprecationReason;i!=null&&e.reportError(new f(`The input field ${n.name}.${r.name} is deprecated. ${i}`,{nodes:t}))}},EnumValue(t){let n=e.getEnumValue(),r=n?.deprecationReason;if(n&&r!=null){let i=q(e.getInputType());i!=null||w(!1),e.reportError(new f(`The enum value "${i.name}.${n.name}" is deprecated. ${r}`,{nodes:t}))}}}}function Mo(e){return{Field(t){let n=q(e.getType());n&&Ie(n)&&e.reportError(new f(`GraphQL introspection has been disabled, but the requested query contained the field "${t.name.value}".`,{nodes:t}))}}}function $r(e){let t={descriptions:!0,specifiedByUrl:!1,directiveIsRepeatable:!1,schemaDescription:!1,inputValueDeprecation:!1,...e},n=t.descriptions?"description":"",r=t.specifiedByUrl?"specifiedByURL":"",i=t.directiveIsRepeatable?"isRepeatable":"",o=t.schemaDescription?n:"";function s(a){return t.inputValueDeprecation?a:""}return`
    query IntrospectionQuery {
      __schema {
        ${o}
        queryType { name }
        mutationType { name }
        subscriptionType { name }
        types {
          ...FullType
        }
        directives {
          name
          ${n}
          ${i}
          locations
          args${s("(includeDeprecated: true)")} {
            ...InputValue
          }
        }
      }
    }

    fragment FullType on __Type {
      kind
      name
      ${n}
      ${r}
      fields(includeDeprecated: true) {
        name
        ${n}
        args${s("(includeDeprecated: true)")} {
          ...InputValue
        }
        type {
          ...TypeRef
        }
        isDeprecated
        deprecationReason
      }
      inputFields${s("(includeDeprecated: true)")} {
        ...InputValue
      }
      interfaces {
        ...TypeRef
      }
      enumValues(includeDeprecated: true) {
        name
        ${n}
        isDeprecated
        deprecationReason
      }
      possibleTypes {
        ...TypeRef
      }
    }

    fragment InputValue on __InputValue {
      name
      ${n}
      type { ...TypeRef }
      defaultValue
      ${s("isDeprecated")}
      ${s("deprecationReason")}
    }

    fragment TypeRef on __Type {
      kind
      name
      ofType {
        kind
        name
        ofType {
          kind
          name
          ofType {
            kind
            name
            ofType {
              kind
              name
              ofType {
                kind
                name
                ofType {
                  kind
                  name
                  ofType {
                    kind
                    name
                  }
                }
              }
            }
          }
        }
      }
    }
  `}function jo(e,t){let n=null;for(let r of e.definitions)if(r.kind===c.OPERATION_DEFINITION){if(t==null){if(n)return null;n=r}else if(r.name?.value===t)return r}return n}function Po(e,t){let n={specifiedByUrl:!0,directiveIsRepeatable:!0,schemaDescription:!0,inputValueDeprecation:!0,...t},r=ze($r(n)),i=Vr({schema:e,document:r});return i.errors==null&&i.data!=null||w(!1),i.data}function Go(e,t){K(e)&&K(e.__schema)||S(!1,`Invalid or incomplete introspection result. Ensure that you are passing "data" property of introspection response and no "errors" was returned alongside: ${m(e)}.`);let n=e.__schema,r=_e(n.types,E=>E.name,E=>y(E));for(let E of[...Qe,...Be])r[E.name]&&(r[E.name]=E);let i=n.queryType?l(n.queryType):null,o=n.mutationType?l(n.mutationType):null,s=n.subscriptionType?l(n.subscriptionType):null,a=n.directives?n.directives.map(ot):[];return new ve({description:n.description,query:i,mutation:o,subscription:s,types:Object.values(r),directives:a,assumeValid:t?.assumeValid});function p(E){if(E.kind===U.LIST){let R=E.ofType;if(!R)throw new Error("Decorated type deeper than introspection query.");return new G(p(R))}if(E.kind===U.NON_NULL){let R=E.ofType;if(!R)throw new Error("Decorated type deeper than introspection query.");let Ne=p(R);return new O($n(Ne))}return u(E)}function u(E){let R=E.name;if(!R)throw new Error(`Unknown type reference: ${m(E)}.`);let Ne=r[R];if(!Ne)throw new Error(`Invalid or incomplete schema, unknown type: ${R}. Ensure that a full introspection query is used in order to build a client schema.`);return Ne}function l(E){return Fn(u(E))}function h(E){return kn(u(E))}function y(E){if(E!=null&&E.name!=null&&E.kind!=null)switch(E.kind){case U.SCALAR:return N(E);case U.OBJECT:return X(E);case U.INTERFACE:return P(E);case U.UNION:return Te(E);case U.ENUM:return be(E);case U.INPUT_OBJECT:return Me(E)}let R=m(E);throw new Error(`Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema: ${R}.`)}function N(E){return new se({name:E.name,description:E.description,specifiedByURL:E.specifiedByURL})}function _(E){if(E.interfaces===null&&E.kind===U.INTERFACE)return[];if(!E.interfaces){let R=m(E);throw new Error(`Introspection result missing interfaces: ${R}.`)}return E.interfaces.map(h)}function X(E){return new ee({name:E.name,description:E.description,interfaces:()=>_(E),fields:()=>Ke(E)})}function P(E){return new Oe({name:E.name,description:E.description,interfaces:()=>_(E),fields:()=>Ke(E)})}function Te(E){if(!E.possibleTypes){let R=m(E);throw new Error(`Introspection result missing possibleTypes: ${R}.`)}return new De({name:E.name,description:E.description,types:()=>E.possibleTypes.map(l)})}function be(E){if(!E.enumValues){let R=m(E);throw new Error(`Introspection result missing enumValues: ${R}.`)}return new de({name:E.name,description:E.description,values:_e(E.enumValues,R=>R.name,R=>({description:R.description,deprecationReason:R.deprecationReason}))})}function Me(E){if(!E.inputFields){let R=m(E);throw new Error(`Introspection result missing inputFields: ${R}.`)}return new Se({name:E.name,description:E.description,fields:()=>Nt(E.inputFields)})}function Ke(E){if(!E.fields)throw new Error(`Introspection result missing fields: ${m(E)}.`);return _e(E.fields,R=>R.name,Tn)}function Tn(E){let R=p(E.type);if(!Ae(R)){let Ne=m(R);throw new Error(`Introspection must provide output type for fields, but received: ${Ne}.`)}if(!E.args){let Ne=m(E);throw new Error(`Introspection result missing field args: ${Ne}.`)}return{description:E.description,deprecationReason:E.deprecationReason,type:R,args:Nt(E.args)}}function Nt(E){return _e(E,R=>R.name,gt)}function gt(E){let R=p(E.type);if(!Z(R)){let yn=m(R);throw new Error(`Introspection must provide input type for arguments, but received: ${yn}.`)}let Ne=E.defaultValue!=null?Ee(An(E.defaultValue),R):void 0;return{description:E.description,type:R,defaultValue:Ne,deprecationReason:E.deprecationReason}}function ot(E){if(!E.args){let R=m(E);throw new Error(`Introspection result missing directive args: ${R}.`)}if(!E.locations){let R=m(E);throw new Error(`Introspection result missing directive locations: ${R}.`)}return new pe({name:E.name,description:E.description,isRepeatable:E.isRepeatable,locations:E.locations.slice(),args:Nt(E.args)})}}function qo(e,t,n){Ft(e),t!=null&&t.kind===c.DOCUMENT||S(!1,"Must provide valid Document AST."),n?.assumeValid!==!0&&n?.assumeValidSDL!==!0&&So(t,e);let r=e.toConfig(),i=di(r,t,n);return r===i?e:new ve(i)}function di(e,t,n){let r=[],i=Object.create(null),o=[],s,a=[];for(let T of t.definitions)if(T.kind===c.SCHEMA_DEFINITION)s=T;else if(T.kind===c.SCHEMA_EXTENSION)a.push(T);else if(Ce(T))r.push(T);else if(ht(T)){let g=T.name.value,D=i[g];i[g]=D?D.concat([T]):[T]}else T.kind===c.DIRECTIVE_DEFINITION&&o.push(T);if(Object.keys(i).length===0&&r.length===0&&o.length===0&&a.length===0&&s==null)return e;let p=Object.create(null);for(let T of e.types)p[T.name]=N(T);for(let T of r){let g=T.name.value;p[g]=Qo[g]??ms(T)}let u={query:e.query&&h(e.query),mutation:e.mutation&&h(e.mutation),subscription:e.subscription&&h(e.subscription),...s&&Nt([s]),...Nt(a)};return{description:s?.description?.value,...u,types:Object.values(p),directives:[...e.directives.map(y),...o.map(E)],extensions:Object.create(null),astNode:s??e.astNode,extensionASTNodes:e.extensionASTNodes.concat(a),assumeValid:n?.assumeValid??!1};function l(T){return F(T)?new G(l(T.ofType)):v(T)?new O(l(T.ofType)):h(T)}function h(T){return p[T.name]}function y(T){let g=T.toConfig();return new pe({...g,args:Fe(g.args,Tn)})}function N(T){if(Ie(T)||Ze(T))return T;if(W(T))return P(T);if(A(T))return Te(T);if(x(T))return be(T);if(M(T))return Me(T);if(C(T))return X(T);if(L(T))return _(T);w(!1,"Unexpected type: "+m(T))}function _(T){let g=T.toConfig(),D=i[g.name]??[];return new Se({...g,fields:()=>({...Fe(g.fields,$=>({...$,type:l($.type)})),...yn(D)}),extensionASTNodes:g.extensionASTNodes.concat(D)})}function X(T){let g=T.toConfig(),D=i[T.name]??[];return new de({...g,values:{...g.values,...Ii(D)},extensionASTNodes:g.extensionASTNodes.concat(D)})}function P(T){let g=T.toConfig(),D=i[g.name]??[],$=g.specifiedByURL;for(let j of D)$=Bo(j)??$;return new se({...g,specifiedByURL:$,extensionASTNodes:g.extensionASTNodes.concat(D)})}function Te(T){let g=T.toConfig(),D=i[g.name]??[];return new ee({...g,interfaces:()=>[...T.getInterfaces().map(h),...En(D)],fields:()=>({...Fe(g.fields,Ke),...R(D)}),extensionASTNodes:g.extensionASTNodes.concat(D)})}function be(T){let g=T.toConfig(),D=i[g.name]??[];return new Oe({...g,interfaces:()=>[...T.getInterfaces().map(h),...En(D)],fields:()=>({...Fe(g.fields,Ke),...R(D)}),extensionASTNodes:g.extensionASTNodes.concat(D)})}function Me(T){let g=T.toConfig(),D=i[g.name]??[];return new De({...g,types:()=>[...T.getTypes().map(h),...vi(D)],extensionASTNodes:g.extensionASTNodes.concat(D)})}function Ke(T){return{...T,type:l(T.type),args:T.args&&Fe(T.args,Tn)}}function Tn(T){return{...T,type:l(T.type)}}function Nt(T){let g={};for(let D of T){let $=D.operationTypes??[];for(let j of $)g[j.operation]=gt(j.type)}return g}function gt(T){let g=T.name.value,D=Qo[g]??p[g];if(D===void 0)throw new Error(`Unknown type: "${g}".`);return D}function ot(T){return T.kind===c.LIST_TYPE?new G(ot(T.type)):T.kind===c.NON_NULL_TYPE?new O(ot(T.type)):gt(T)}function E(T){return new pe({name:T.name.value,description:T.description?.value,locations:T.locations.map(({value:g})=>g),isRepeatable:T.repeatable,args:Ne(T.arguments),astNode:T})}function R(T){let g=Object.create(null);for(let D of T){let $=D.fields??[];for(let j of $)g[j.name.value]={type:ot(j.type),description:j.description?.value,args:Ne(j.arguments),deprecationReason:Cr(j),astNode:j}}return g}function Ne(T){let g=T??[],D=Object.create(null);for(let $ of g){let j=ot($.type);D[$.name.value]={type:j,description:$.description?.value,defaultValue:Ee($.defaultValue,j),deprecationReason:Cr($),astNode:$}}return D}function yn(T){let g=Object.create(null);for(let D of T){let $=D.fields??[];for(let j of $){let bi=ot(j.type);g[j.name.value]={type:bi,description:j.description?.value,defaultValue:Ee(j.defaultValue,bi),deprecationReason:Cr(j),astNode:j}}}return g}function Ii(T){let g=Object.create(null);for(let D of T){let $=D.values??[];for(let j of $)g[j.name.value]={description:j.description?.value,deprecationReason:Cr(j),astNode:j}}return g}function En(T){return T.flatMap(g=>g.interfaces?.map(gt)??[])}function vi(T){return T.flatMap(g=>g.types?.map(gt)??[])}function ms(T){let g=T.name.value,D=i[g]??[];switch(T.kind){case c.OBJECT_TYPE_DEFINITION:{let $=[T,...D];return new ee({name:g,description:T.description?.value,interfaces:()=>En($),fields:()=>R($),astNode:T,extensionASTNodes:D})}case c.INTERFACE_TYPE_DEFINITION:{let $=[T,...D];return new Oe({name:g,description:T.description?.value,interfaces:()=>En($),fields:()=>R($),astNode:T,extensionASTNodes:D})}case c.ENUM_TYPE_DEFINITION:{let $=[T,...D];return new de({name:g,description:T.description?.value,values:Ii($),astNode:T,extensionASTNodes:D})}case c.UNION_TYPE_DEFINITION:{let $=[T,...D];return new De({name:g,description:T.description?.value,types:()=>vi($),astNode:T,extensionASTNodes:D})}case c.SCALAR_TYPE_DEFINITION:return new se({name:g,description:T.description?.value,specifiedByURL:Bo(T),astNode:T,extensionASTNodes:D});case c.INPUT_OBJECT_TYPE_DEFINITION:{let $=[T,...D];return new Se({name:g,description:T.description?.value,fields:()=>yn($),astNode:T,extensionASTNodes:D})}}}}var Qo=oe([...Qe,...Be],e=>e.name);function Cr(e){return it(mt,e)?.reason}function Bo(e){return it(Zt,e)?.url}function hi(e,t){e!=null&&e.kind===c.DOCUMENT||S(!1,"Must provide valid Document AST."),t?.assumeValid!==!0&&t?.assumeValidSDL!==!0&&Do(e);let r=di({description:void 0,types:[],directives:[],extensions:Object.create(null),extensionASTNodes:[],assumeValid:!1},e,t);if(r.astNode==null)for(let o of r.types)switch(o.name){case"Query":r.query=o;break;case"Mutation":r.mutation=o;break;case"Subscription":r.subscription=o;break}let i=[...r.directives,...he.filter(o=>r.directives.every(s=>s.name!==o.name))];return new ve({...r,directives:i})}function Yo(e,t){let n=ze(e,{noLocation:t?.noLocation,allowLegacyFragmentVariables:t?.allowLegacyFragmentVariables});return hi(n,{assumeValidSDL:t?.assumeValidSDL,assumeValid:t?.assumeValid})}function Jo(e){let t=e.toConfig(),n=_e(Ti(t.types),y=>y.name,h);return new ve({...t,types:Object.values(n),directives:Ti(t.directives).map(s),query:o(t.query),mutation:o(t.mutation),subscription:o(t.subscription)});function r(y){return F(y)?new G(r(y.ofType)):v(y)?new O(r(y.ofType)):i(y)}function i(y){return n[y.name]}function o(y){return y&&i(y)}function s(y){let N=y.toConfig();return new pe({...N,locations:Ko(N.locations,_=>_),args:a(N.args)})}function a(y){return Ur(y,N=>({...N,type:r(N.type)}))}function p(y){return Ur(y,N=>({...N,type:r(N.type),args:N.args&&a(N.args)}))}function u(y){return Ur(y,N=>({...N,type:r(N.type)}))}function l(y){return Ti(y).map(i)}function h(y){if(W(y)||Ie(y))return y;if(A(y)){let N=y.toConfig();return new ee({...N,interfaces:()=>l(N.interfaces),fields:()=>p(N.fields)})}if(x(y)){let N=y.toConfig();return new Oe({...N,interfaces:()=>l(N.interfaces),fields:()=>p(N.fields)})}if(M(y)){let N=y.toConfig();return new De({...N,types:()=>l(N.types)})}if(C(y)){let N=y.toConfig();return new de({...N,values:Ur(N.values,_=>_)})}if(L(y)){let N=y.toConfig();return new Se({...N,fields:()=>u(N.fields)})}w(!1,"Unexpected type: "+m(y))}}function Ur(e,t){let n=Object.create(null);for(let r of Object.keys(e).sort(Ge))n[r]=t(e[r]);return n}function Ti(e){return Ko(e,t=>t.name)}function Ko(e,t){return e.slice().sort((n,r)=>{let i=t(n),o=t(r);return Ge(i,o)})}function Xo(e){return Ho(e,t=>!en(t),Ra)}function zo(e){return Ho(e,en,Ie)}function Ra(e){return!Ze(e)&&!Ie(e)}function Ho(e,t,n){let r=e.getDirectives().filter(t),i=Object.values(e.getTypeMap()).filter(n);return[xa(e),...r.map(o=>Ua(o)),...i.map(o=>Ei(o))].filter(Boolean).join(`

`)}function xa(e){if(e.description==null&&La(e))return;let t=[],n=e.getQueryType();n&&t.push(`  query: ${n.name}`);let r=e.getMutationType();r&&t.push(`  mutation: ${r.name}`);let i=e.getSubscriptionType();return i&&t.push(`  subscription: ${i.name}`),Le(e)+`schema {
${t.join(`
`)}
}`}function La(e){let t=e.getQueryType();if(t&&t.name!=="Query")return!1;let n=e.getMutationType();if(n&&n.name!=="Mutation")return!1;let r=e.getSubscriptionType();return!(r&&r.name!=="Subscription")}function Ei(e){if(W(e))return wa(e);if(A(e))return Fa(e);if(x(e))return ka(e);if(M(e))return Va(e);if(C(e))return $a(e);if(L(e))return Ca(e);w(!1,"Unexpected type: "+m(e))}function wa(e){return Le(e)+`scalar ${e.name}`+Ma(e)}function Wo(e){let t=e.getInterfaces();return t.length?" implements "+t.map(n=>n.name).join(" & "):""}function Fa(e){return Le(e)+`type ${e.name}`+Wo(e)+Zo(e)}function ka(e){return Le(e)+`interface ${e.name}`+Wo(e)+Zo(e)}function Va(e){let t=e.getTypes(),n=t.length?" = "+t.join(" | "):"";return Le(e)+"union "+e.name+n}function $a(e){let t=e.getValues().map((n,r)=>Le(n,"  ",!r)+"  "+n.name+gi(n.deprecationReason));return Le(e)+`enum ${e.name}`+Ni(t)}function Ca(e){let t=Object.values(e.getFields()).map((n,r)=>Le(n,"  ",!r)+"  "+yi(n));return Le(e)+`input ${e.name}`+Ni(t)}function Zo(e){let t=Object.values(e.getFields()).map((n,r)=>Le(n,"  ",!r)+"  "+n.name+es(n.args,"  ")+": "+String(n.type)+gi(n.deprecationReason));return Ni(t)}function Ni(e){return e.length!==0?` {
`+e.join(`
`)+`
}`:""}function es(e,t=""){return e.length===0?"":e.every(n=>!n.description)?"("+e.map(yi).join(", ")+")":`(
`+e.map((n,r)=>Le(n,"  "+t,!r)+"  "+t+yi(n)).join(`
`)+`
`+t+")"}function yi(e){let t=xe(e.defaultValue,e.type),n=e.name+": "+String(e.type);return t&&(n+=` = ${k(t)}`),n+gi(e.deprecationReason)}function Ua(e){return Le(e)+"directive @"+e.name+es(e.args)+(e.isRepeatable?" repeatable":"")+" on "+e.locations.join(" | ")}function gi(e){return e==null?"":e!==Wt?` @deprecated(reason: ${k({kind:c.STRING,value:e})})`:" @deprecated"}function Ma(e){return e.specifiedByURL==null?"":` @specifiedBy(url: ${k({kind:c.STRING,value:e.specifiedByURL})})`}function Le(e,t="",n=!0){let{description:r}=e;if(r==null)return"";let i=k({kind:c.STRING,value:r,block:Ai(r)});return(t&&!n?`
`+t:t)+i.replace(/\n/g,`
`+t)+`
`}function ts(e){let t=[];for(let n of e)t.push(...n.definitions);return{kind:c.DOCUMENT,definitions:t}}function rs(e){let t=[],n=Object.create(null);for(let i of e.definitions)switch(i.kind){case c.OPERATION_DEFINITION:t.push(i);break;case c.FRAGMENT_DEFINITION:n[i.name.value]=ns(i.selectionSet);break;default:}let r=Object.create(null);for(let i of t){let o=new Set;for(let a of ns(i.selectionSet))is(o,n,a);let s=i.name?i.name.value:"";r[s]={kind:c.DOCUMENT,definitions:e.definitions.filter(a=>a===i||a.kind===c.FRAGMENT_DEFINITION&&o.has(a.name.value))}}return r}function is(e,t,n){if(!e.has(n)){e.add(n);let r=t[n];if(r!==void 0)for(let i of r)is(e,t,i)}}function ns(e){let t=[];return ke(e,{FragmentSpread(n){t.push(n.name.value)}}),t}function os(e){let t=Dn(e)?e:new je(e),n=t.body,r=new Xe(t),i="",o=!1;for(;r.advance().kind!==d.EOF;){let s=r.token,a=s.kind,p=!bn(s.kind);o&&(p||s.kind===d.SPREAD)&&(i+=" ");let u=n.slice(s.start,s.end);a===d.BLOCK_STRING?i+=vn(s.value,{minimize:!0}):i+=u,o=p}return i}var J;(function(e){e.TYPE_REMOVED="TYPE_REMOVED",e.TYPE_CHANGED_KIND="TYPE_CHANGED_KIND",e.TYPE_REMOVED_FROM_UNION="TYPE_REMOVED_FROM_UNION",e.VALUE_REMOVED_FROM_ENUM="VALUE_REMOVED_FROM_ENUM",e.REQUIRED_INPUT_FIELD_ADDED="REQUIRED_INPUT_FIELD_ADDED",e.IMPLEMENTED_INTERFACE_REMOVED="IMPLEMENTED_INTERFACE_REMOVED",e.FIELD_REMOVED="FIELD_REMOVED",e.FIELD_CHANGED_KIND="FIELD_CHANGED_KIND",e.REQUIRED_ARG_ADDED="REQUIRED_ARG_ADDED",e.ARG_REMOVED="ARG_REMOVED",e.ARG_CHANGED_KIND="ARG_CHANGED_KIND",e.DIRECTIVE_REMOVED="DIRECTIVE_REMOVED",e.DIRECTIVE_ARG_REMOVED="DIRECTIVE_ARG_REMOVED",e.REQUIRED_DIRECTIVE_ARG_ADDED="REQUIRED_DIRECTIVE_ARG_ADDED",e.DIRECTIVE_REPEATABLE_REMOVED="DIRECTIVE_REPEATABLE_REMOVED",e.DIRECTIVE_LOCATION_REMOVED="DIRECTIVE_LOCATION_REMOVED"})(J||(J={}));var we;(function(e){e.VALUE_ADDED_TO_ENUM="VALUE_ADDED_TO_ENUM",e.TYPE_ADDED_TO_UNION="TYPE_ADDED_TO_UNION",e.OPTIONAL_INPUT_FIELD_ADDED="OPTIONAL_INPUT_FIELD_ADDED",e.OPTIONAL_ARG_ADDED="OPTIONAL_ARG_ADDED",e.IMPLEMENTED_INTERFACE_ADDED="IMPLEMENTED_INTERFACE_ADDED",e.ARG_DEFAULT_VALUE_CHANGE="ARG_DEFAULT_VALUE_CHANGE"})(we||(we={}));function us(e,t){return fs(e,t).filter(n=>n.type in J)}function ls(e,t){return fs(e,t).filter(n=>n.type in we)}function fs(e,t){return[...Pa(e,t),...ja(e,t)]}function ja(e,t){let n=[],r=Je(e.getDirectives(),t.getDirectives());for(let i of r.removed)n.push({type:J.DIRECTIVE_REMOVED,description:`${i.name} was removed.`});for(let[i,o]of r.persisted){let s=Je(i.args,o.args);for(let a of s.added)Re(a)&&n.push({type:J.REQUIRED_DIRECTIVE_ARG_ADDED,description:`A required arg ${a.name} on directive ${i.name} was added.`});for(let a of s.removed)n.push({type:J.DIRECTIVE_ARG_REMOVED,description:`${a.name} was removed from ${i.name}.`});i.isRepeatable&&!o.isRepeatable&&n.push({type:J.DIRECTIVE_REPEATABLE_REMOVED,description:`Repeatable flag was removed from ${i.name}.`});for(let a of i.locations)o.locations.includes(a)||n.push({type:J.DIRECTIVE_LOCATION_REMOVED,description:`${a} was removed from ${i.name}.`})}return n}function Pa(e,t){let n=[],r=Je(Object.values(e.getTypeMap()),Object.values(t.getTypeMap()));for(let i of r.removed)n.push({type:J.TYPE_REMOVED,description:Ze(i)?`Standard scalar ${i.name} was removed because it is not referenced anymore.`:`${i.name} was removed.`});for(let[i,o]of r.persisted)C(i)&&C(o)?n.push(...Ba(i,o)):M(i)&&M(o)?n.push(...Qa(i,o)):L(i)&&L(o)?n.push(...Ga(i,o)):A(i)&&A(o)?n.push(...as(i,o),...ss(i,o)):x(i)&&x(o)?n.push(...as(i,o),...ss(i,o)):i.constructor!==o.constructor&&n.push({type:J.TYPE_CHANGED_KIND,description:`${i.name} changed from ${cs(i)} to ${cs(o)}.`});return n}function Ga(e,t){let n=[],r=Je(Object.values(e.getFields()),Object.values(t.getFields()));for(let i of r.added)We(i)?n.push({type:J.REQUIRED_INPUT_FIELD_ADDED,description:`A required field ${i.name} on input type ${e.name} was added.`}):n.push({type:we.OPTIONAL_INPUT_FIELD_ADDED,description:`An optional field ${i.name} on input type ${e.name} was added.`});for(let i of r.removed)n.push({type:J.FIELD_REMOVED,description:`${e.name}.${i.name} was removed.`});for(let[i,o]of r.persisted)hn(i.type,o.type)||n.push({type:J.FIELD_CHANGED_KIND,description:`${e.name}.${i.name} changed type from ${String(i.type)} to ${String(o.type)}.`});return n}function Qa(e,t){let n=[],r=Je(e.getTypes(),t.getTypes());for(let i of r.added)n.push({type:we.TYPE_ADDED_TO_UNION,description:`${i.name} was added to union type ${e.name}.`});for(let i of r.removed)n.push({type:J.TYPE_REMOVED_FROM_UNION,description:`${i.name} was removed from union type ${e.name}.`});return n}function Ba(e,t){let n=[],r=Je(e.getValues(),t.getValues());for(let i of r.added)n.push({type:we.VALUE_ADDED_TO_ENUM,description:`${i.name} was added to enum type ${e.name}.`});for(let i of r.removed)n.push({type:J.VALUE_REMOVED_FROM_ENUM,description:`${i.name} was removed from enum type ${e.name}.`});return n}function ss(e,t){let n=[],r=Je(e.getInterfaces(),t.getInterfaces());for(let i of r.added)n.push({type:we.IMPLEMENTED_INTERFACE_ADDED,description:`${i.name} added to interfaces implemented by ${e.name}.`});for(let i of r.removed)n.push({type:J.IMPLEMENTED_INTERFACE_REMOVED,description:`${e.name} no longer implements interface ${i.name}.`});return n}function as(e,t){let n=[],r=Je(Object.values(e.getFields()),Object.values(t.getFields()));for(let i of r.removed)n.push({type:J.FIELD_REMOVED,description:`${e.name}.${i.name} was removed.`});for(let[i,o]of r.persisted)n.push(...qa(e,i,o)),dn(i.type,o.type)||n.push({type:J.FIELD_CHANGED_KIND,description:`${e.name}.${i.name} changed type from ${String(i.type)} to ${String(o.type)}.`});return n}function qa(e,t,n){let r=[],i=Je(t.args,n.args);for(let o of i.removed)r.push({type:J.ARG_REMOVED,description:`${e.name}.${t.name} arg ${o.name} was removed.`});for(let[o,s]of i.persisted)if(!hn(o.type,s.type))r.push({type:J.ARG_CHANGED_KIND,description:`${e.name}.${t.name} arg ${o.name} has changed type from ${String(o.type)} to ${String(s.type)}.`});else if(o.defaultValue!==void 0)if(s.defaultValue===void 0)r.push({type:we.ARG_DEFAULT_VALUE_CHANGE,description:`${e.name}.${t.name} arg ${o.name} defaultValue was removed.`});else{let p=ps(o.defaultValue,o.type),u=ps(s.defaultValue,s.type);p!==u&&r.push({type:we.ARG_DEFAULT_VALUE_CHANGE,description:`${e.name}.${t.name} arg ${o.name} has changed defaultValue from ${p} to ${u}.`})}for(let o of i.added)Re(o)?r.push({type:J.REQUIRED_ARG_ADDED,description:`A required arg ${o.name} on ${e.name}.${t.name} was added.`}):r.push({type:we.OPTIONAL_ARG_ADDED,description:`An optional arg ${o.name} on ${e.name}.${t.name} was added.`});return r}function dn(e,t){return F(e)?F(t)&&dn(e.ofType,t.ofType)||v(t)&&dn(e,t.ofType):v(e)?v(t)&&dn(e.ofType,t.ofType):He(t)&&e.name===t.name||v(t)&&dn(e,t.ofType)}function hn(e,t){return F(e)?F(t)&&hn(e.ofType,t.ofType):v(e)?v(t)&&hn(e.ofType,t.ofType)||!v(t)&&hn(e.ofType,t):He(t)&&e.name===t.name}function cs(e){if(W(e))return"a Scalar type";if(A(e))return"an Object type";if(x(e))return"an Interface type";if(M(e))return"a Union type";if(C(e))return"an Enum type";if(L(e))return"an Input type";w(!1,"Unexpected type: "+m(e))}function ps(e,t){let n=xe(e,t);return n!=null||w(!1),k($t(n))}function Je(e,t){let n=[],r=[],i=[],o=oe(e,({name:a})=>a),s=oe(t,({name:a})=>a);for(let a of e){let p=s[a.name];p===void 0?r.push(a):i.push([a,p])}for(let a of t)o[a.name]===void 0&&n.push(a);return{added:n,persisted:i,removed:r}}export{pt as BREAK,J as BreakingChangeType,Wt as DEFAULT_DEPRECATION_REASON,we as DangerousChangeType,b as DirectiveLocation,qn as ExecutableDefinitionsRule,Yn as FieldsOnCorrectTypeRule,Jn as FragmentsOnCompositeTypesRule,Yt as GRAPHQL_MAX_INT,Jt as GRAPHQL_MIN_INT,ce as GraphQLBoolean,mt as GraphQLDeprecatedDirective,pe as GraphQLDirective,de as GraphQLEnumType,f as GraphQLError,Jr as GraphQLFloat,Kt as GraphQLID,zt as GraphQLIncludeDirective,Se as GraphQLInputObjectType,Yr as GraphQLInt,Oe as GraphQLInterfaceType,G as GraphQLList,O as GraphQLNonNull,ee as GraphQLObjectType,se as GraphQLScalarType,ve as GraphQLSchema,Ht as GraphQLSkipDirective,Zt as GraphQLSpecifiedByDirective,Q as GraphQLString,De as GraphQLUnionType,c as Kind,Kn as KnownArgumentNamesRule,an as KnownDirectivesRule,Xn as KnownFragmentNamesRule,cn as KnownTypeNamesRule,Xe as Lexer,It as Location,zn as LoneAnonymousOperationRule,Hn as LoneSchemaDefinitionRule,Uo as NoDeprecatedCustomRule,Wn as NoFragmentCyclesRule,Mo as NoSchemaIntrospectionCustomRule,Zn as NoUndefinedVariablesRule,er as NoUnusedFragmentsRule,tr as NoUnusedVariablesRule,B as OperationTypeNode,or as OverlappingFieldsCanBeMergedRule,sr as PossibleFragmentSpreadsRule,ar as PossibleTypeExtensionsRule,cr as ProvidedRequiredArgumentsRule,pr as ScalarLeafsRule,et as SchemaMetaFieldDef,dr as SingleFieldSubscriptionsRule,je as Source,at as Token,d as TokenKind,rt as TypeInfo,U as TypeKind,tt as TypeMetaFieldDef,nt as TypeNameMetaFieldDef,hr as UniqueArgumentDefinitionNamesRule,un as UniqueArgumentNamesRule,Tr as UniqueDirectiveNamesRule,ln as UniqueDirectivesPerLocationRule,yr as UniqueEnumValueNamesRule,Er as UniqueFieldDefinitionNamesRule,Nr as UniqueFragmentNamesRule,fn as UniqueInputFieldNamesRule,gr as UniqueOperationNamesRule,Ir as UniqueOperationTypesRule,vr as UniqueTypeNamesRule,br as UniqueVariableNamesRule,Mt as ValidationContext,_r as ValuesOfCorrectTypeRule,Or as VariablesAreInputTypesRule,Dr as VariablesInAllowedPositionRule,Mn as __Directive,jn as __DirectiveLocation,Gn as __EnumValue,Pn as __Field,wt as __InputValue,Lt as __Schema,ge as __Type,Qn as __TypeKind,Zi as assertAbstractType,Wi as assertCompositeType,oo as assertDirective,qi as assertEnumType,Ln as assertEnumValueName,Yi as assertInputObjectType,Xi as assertInputType,kn as assertInterfaceType,Hi as assertLeafType,Ji as assertListType,me as assertName,to as assertNamedType,Ki as assertNonNullType,$n as assertNullableType,Fn as assertObjectType,zi as assertOutputType,Qi as assertScalarType,Ft as assertSchema,Gi as assertType,Bi as assertUnionType,kt as assertValidSchema,eo as assertWrappingType,xe as astFromValue,hi as buildASTSchema,Go as buildClientSchema,Yo as buildSchema,lr as coerceInputValue,ts as concatAST,mi as createSourceEventStream,kr as defaultFieldResolver,ui as defaultTypeResolver,qt as doTypesOverlap,Et as execute,Vr as executeSync,qo as extendSchema,us as findBreakingChanges,ls as findDangerousChanges,Tt as getArgumentValues,it as getDirectiveValues,ut as getEnterLeaveForKind,$r as getIntrospectionQuery,st as getLocation,q as getNamedType,At as getNullableType,jo as getOperationAST,fr as getVariableValues,Da as graphql,Sa as graphqlSync,Po as introspectionFromSchema,Be as introspectionTypes,ae as isAbstractType,ye as isCompositeType,Bn as isConstValueNode,lo as isDefinitionNode,ft as isDirective,C as isEnumType,Rt as isEqualType,rn as isExecutableDefinitionNode,L as isInputObjectType,Z as isInputType,x as isInterfaceType,Ie as isIntrospectionType,te as isLeafType,F as isListType,He as isNamedType,v as isNonNullType,Vn as isNullableType,A as isObjectType,Ae as isOutputType,Re as isRequiredArgument,We as isRequiredInputField,W as isScalarType,Kr as isSchema,fo as isSelectionNode,en as isSpecifiedDirective,Ze as isSpecifiedScalarType,lt as isType,Ce as isTypeDefinitionNode,ht as isTypeExtensionNode,mo as isTypeNode,Ue as isTypeSubTypeOf,on as isTypeSystemDefinitionNode,sn as isTypeSystemExtensionNode,M as isUnionType,Hr as isValueNode,St as isWrappingType,Jo as lexicographicSortSchema,Ye as locatedError,ze as parse,wi as parseConstValue,Fi as parseType,An as parseValue,k as print,zo as printIntrospectionSchema,Nn as printLocation,Xo as printSchema,jt as printSourceLocation,Ei as printType,Un as resolveObjMapThunk,Cn as resolveReadonlyArrayThunk,ne as responsePathAsArray,rs as separateOperations,he as specifiedDirectives,Sr as specifiedRules,Qe as specifiedScalarTypes,os as stripIgnoredCharacters,Co as subscribe,z as syntaxError,Y as typeFromAST,xr as validate,nn as validateSchema,Ee as valueFromAST,Ot as valueFromASTUntyped,ds as version,hs as versionInfo,ke as visit,Bt as visitInParallel,Vt as visitWithTypeInfo};
